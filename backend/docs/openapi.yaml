components:
  schemas:
    Tenant:
      properties:
        id:
          format: uuid
          type: string
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
    token:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: DCLabs API
  title: DCLabs API
  version: 1.0.0
openapi: 3.0.3
paths:
  /api/v3/absences/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  service:
                    example: absences
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - absences
    parameters: []
    summary: summary
  /api/v3/absences/holidays:
    description: ''
    get:
      deprecated: false
      description: Get all holidays TODO parameters
      parameters:
      - description: ''
        in: query
        name: year
        required: false
        schema:
          default: null
          format: int64
          type: integer
      - description: ''
        in: query
        name: groups
        required: false
        schema:
          default: null
          type: string
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 50
          format: int64
          type: integer
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: id,start_date,end_date,title
            enum:
            - id
            - start_date
            - end_date
            - title
            type: string
          type: array
      - description: Result order
        in: query
        name: order_by
        required: false
        schema:
          default: start_date
          enum:
          - created
          - start_date
          - end_date
          - title
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    end_date:
                      format: date-time
                      type: string
                    id:
                      format: uuid
                      type: string
                    start_date:
                      format: date-time
                      type: string
                    title:
                      example: new year
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_holidays.json
      summary: Get all holidays TODO parameters
      tags:
      - absences
    parameters: []
    post:
      deprecated: false
      description: Post new holiday TODO request.body
      requestBody:
        content:
          application/json:
            schema:
              properties:
                end_date:
                  format: date-time
                  type: string
                groups:
                  items:
                    type: string
                  type: array
                start_date:
                  format: date-time
                  type: string
                title:
                  properties:
                    en:
                      example: New Year
                      type: string
                    sr:
                      example: Nova godina
                      type: string
                  type: object
              type: object
        description: '@absences/POST_201_documentation_post_single_holiday.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
          description: POST_201_documentation_post_single_holiday.json
      summary: Post new holiday  TODO request.body
      tags:
      - absences
    summary: summary
  /api/v3/absences/holidays/{id_holiday}:
    delete:
      deprecated: false
      description: Delete a holiday TODO return None?
      parameters: []
      responses:
        '204':
          description: DELETE_204_documentation_delete_single_holiday.json
      summary: Delete a holiday    TODO return None?
      tags:
      - absences
    description: ''
    get:
      deprecated: false
      description: Get a holiday
      parameters:
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - start_date
            - end_date
            - title
            type: string
          type: array
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  end_date:
                    format: date-time
                    type: string
                  id:
                    format: uuid
                    type: string
                  start_date:
                    format: date-time
                    type: string
                  title:
                    example: new year
                    type: string
                type: object
          description: GET_200_documentation_get_single_holiday.json
      summary: Get a holiday
      tags:
      - absences
    parameters:
    - description: Holiday ID
      in: path
      name: id_holiday
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch a holiday TODO request.body
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                end_date:
                  format: date-time
                  type: string
              type: object
        description: '@absences/PATCH_200_documentation_patch_single_holiday.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  updated:
                    example: true
                    format: int64
                    type: integer
                type: object
          description: PATCH_200_documentation_patch_single_holiday.json
      summary: Patch a holiday     TODO request.body
      tags:
      - absences
    summary: summary
  /api/v3/absences/vacations:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post a vacation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                end:
                  format: date
                  type: string
                id_user:
                  format: uuid
                  type: string
                start:
                  format: date
                  type: string
              required:
              - start
              - end
              type: object
        description: '@absences/POST_200_documentation_post_single_vacation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
          description: POST_200_documentation_post_single_vacation.json
      summary: Post a vacation
      tags:
      - absences
    summary: summary
  /api/v3/absences/vacations/{id_vacation}:
    description: ''
    get:
      deprecated: false
      description: Get single vacation
      parameters:
      - description: CSV string
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - id_user
            - start
            - end
            - start_yyyymm
            - end_yyyymm
            - list_of_year_months
            - number_of_work_days
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    type: string
                  leave_hours:
                    example: 20
                    format: int64
                    type: integer
                  leave_hours_left_from_previous_year:
                    example: 6
                    format: int64
                    type: integer
                  left_from_previous_period:
                    example: 3
                    format: int64
                    type: integer
                  vacation_days:
                    example: 10
                    format: int64
                    type: integer
                type: object
          description: GET_200_documentation_get_users_leave_hours_and_vacation_days.json
      summary: Get single vacation
      tags:
      - absences
    parameters:
    - description: ID of a vacation
      in: path
      name: id_vacation
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/absences/year/{year}/month/{month}:
    description: ''
    get:
      deprecated: false
      description: Get all users remaining vacation days and leave hours for specific
        time period TODO parameters
      parameters:
      - description: ''
        in: query
        name: departments
        required: false
        schema:
          default: null
          type: string
      - description: ''
        in: query
        name: users
        required: false
        schema:
          default: null
          type: string
      - description: ''
        in: query
        name: distinct_user_grouping
        required: false
        schema:
          default: null
          type: boolean
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Result order
        in: query
        name: order_by
        required: false
        schema:
          default: display_name
          enum:
          - order
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  0144f97f-3a70-44ba-aa69-6b64e93e6f70:
                    properties:
                      name:
                        example: Development
                        type: string
                      users:
                        items:
                          properties:
                            display_name:
                              example: Aleksandar Stojkovic
                              type: string
                            id:
                              format: uuid
                              type: string
                            profile_picture:
                              type: 'null'
                            vacation_days:
                              properties:
                                left:
                                  example: 20
                                  format: int64
                                  type: integer
                                total:
                                  example: 30
                                  format: int64
                                  type: integer
                                used:
                                  example: 10
                                  format: int64
                                  type: integer
                              type: object
                          type: object
                        type: array
                    type: object
                  06da7f49-9124-402d-b828-b42ace9de8ea:
                    properties:
                      name:
                        example: Test
                        type: string
                      users:
                        items:
                          type: string
                        type: array
                    type: object
                  a8ed1fb6-216e-46b4-a9ef-3dcd45656bc3:
                    properties:
                      name:
                        example: Support
                        type: string
                      users:
                        items:
                          type: string
                        type: array
                    type: object
                  c8ef666c-9211-4b45-b6b7-3831242f2c08:
                    properties:
                      name:
                        example: Quality Assurance
                        type: string
                      users:
                        items:
                          properties:
                            display_name:
                              example: "Mustafa Red\u017Eepovi\u0107"
                              type: string
                            id:
                              format: uuid
                              type: string
                            profile_picture:
                              type: 'null'
                            vacation_days:
                              properties:
                                left:
                                  example: 20
                                  format: int64
                                  type: integer
                                total:
                                  example: 30
                                  format: int64
                                  type: integer
                                used:
                                  example: 10
                                  format: int64
                                  type: integer
                              type: object
                          type: object
                        type: array
                    type: object
                  eca9b411-3617-4e41-b97a-4d32095bcbe0:
                    properties:
                      name:
                        example: Product Design
                        type: string
                      users:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
          description: GET_200_documentation_get_all_absences.json
      summary: Get all users remaining vacation days and leave hours for specific
        time period TODO parameters
      tags:
      - absences
    parameters:
    - description: Year
      in: path
      name: year
      required: true
      schema:
        type: string
      type: string
    - description: Month
      in: path
      name: month
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/absences/year/{year}/users/{id_user}/setup:
    description: ''
    get:
      deprecated: false
      description: Get users remaining vacation days and leave hours for provided
        user and year
      parameters:
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - vacation_days
            - left_from_previous_period
            - leave_hours
            - leave_hours_left_from_previous_year
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    type: string
                  leave_hours:
                    example: 20
                    format: int64
                    type: integer
                  leave_hours_left_from_previous_year:
                    example: 6
                    format: int64
                    type: integer
                  left_from_previous_period:
                    example: 3
                    format: int64
                    type: integer
                  vacation_days:
                    example: 10
                    format: int64
                    type: integer
                type: object
          description: GET_200_documentation_get_users_leave_hours_and_vacation_days.json
      summary: Get users remaining vacation days and leave hours for provided user
        and year
      tags:
      - absences
    parameters:
    - description: Year
      in: path
      name: year
      required: true
      schema:
        type: string
      type: string
    - description: User ID
      in: path
      name: id_user
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: 'Add vacation days and leave hours to provided user # TODO request.body'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                leave_hours:
                  default: null
                  example: 20
                  format: int64
                  type: integer
                leave_hours_left_from_previous_year:
                  default: null
                  example: 6
                  format: int64
                  type: integer
                left_from_previous_period:
                  default: null
                  example: 3
                  format: int64
                  type: integer
                vacation_days:
                  default: null
                  example: 10
                  format: int64
                  type: integer
              type: object
        description: '@absences/PATCH_200_documentation_patch_users_leave_hours_and_vacation_days.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  created:
                    example: true
                    format: int64
                    type: integer
                  id:
                    format: uuid
                    type: string
                type: object
          description: PATCH_200_documentation_patch_users_leave_hours_and_vacation_days.json
      summary: 'Add vacation days and leave hours to provided user  # TODO request.body'
      tags:
      - absences
    summary: summary
  /api/v3/base/about:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    summary: summary
  /api/v3/base/devel_cache_invalidate:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    post:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    summary: summary
  /api/v3/base/gen_uids:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: prefix
        required: false
        schema:
          default: S
          type: string
      - in: query
        name: nr
        required: false
        schema:
          default: 10
          format: int64
          type: integer
      - in: query
        name: size
        required: false
        schema:
          default: 8
          format: int64
          type: integer
      - in: query
        name: alphabet
        required: false
        schema:
          default: WERTYUPAFGHJKLXCVBNM346789
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    summary: summary
  /api/v3/base/get-current-date-mock-test:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    summary: summary
  /api/v3/base/log/level:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: service
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: service
        required: true
        schema:
          type: string
      - in: body
        name: level
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    summary: summary
  /api/v3/base/routes:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: specific_route
        required: false
        schema:
          default: null
          type: string
      - in: query
        name: format
        required: false
        schema:
          default: html
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    summary: summary
  /api/v3/base/test_tsv:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    summary: summary
  /api/v3/base/throw-an-exception:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    summary: summary
  /api/v3/base/type:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: int_type
        required: false
        schema:
          default: null
          format: int64
          type: integer
      - in: query
        name: float_type
        required: false
        schema:
          default: null
          format: float64
          type: number
      - in: query
        name: bool_type
        required: false
        schema:
          default: null
          type: boolean
      - in: query
        name: datetime_type
        required: false
        schema:
          default: null
          format: date-time
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    summary: summary
  /api/v3/base/weak:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - base
    parameters: []
    summary: summary
  /api/v3/bookmarks/:
    description: ''
    get:
      deprecated: false
      description: Get all bookmarks created by user
      parameters:
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - name
            - app_name
            - url
            - color
            - icon
            - order
            type: string
          type: array
      - description: Result order
        in: query
        name: order
        required: false
        schema:
          default: order
          enum:
          - order
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    app_name:
                      example: app1
                      type: string
                    color:
                      properties:
                        background:
                          example: white
                          type: string
                        text:
                          example: black
                          type: string
                      type: object
                    icon:
                      example: mega
                      type: string
                    id:
                      format: uuid
                      type: string
                    name:
                      example: bookmark1
                      type: string
                    order:
                      example: 1
                      format: int64
                      type: integer
                    url:
                      example: https://impresaone.int.telmekom.net/applications
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_bookmarks.json
      summary: Get all bookmarks created by user
      tags:
      - bookmarks
    parameters: []
    post:
      deprecated: false
      description: Post a bookmark TODO parameters
      parameters:
      - description: Bookmark name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: ''
        in: body
        name: app_name
        required: true
        schema:
          type: string
      - description: ''
        in: body
        name: url
        required: false
        schema:
          default: null
          type: string
      - description: Bookmark color
        in: body
        name: color
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: Bookmark icon
        in: body
        name: icon
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound GET_200_documentation_post_single_bookmark.request_body.json
                  type: string
              type: object
        description: '@bookmarks/GET_200_documentation_post_single_bookmark.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/bookmarks/GET_200_documentation_post_single_bookmark.json'
                    type: string
                type: object
          description: GET_200_documentation_post_single_bookmark.json
      summary: Post a bookmark TODO parameters
      tags:
      - bookmarks
    summary: summary
  /api/v3/bookmarks/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  service:
                    example: bookmarks
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - bookmarks
    parameters: []
    summary: summary
  /api/v3/bookmarks/order:
    description: ''
    get:
      deprecated: false
      description: Get all bookmark order
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: GET_200_documentation_get_all_bookmark_order.json
      summary: Get all bookmark order
      tags:
      - bookmarks
    parameters: []
    patch:
      deprecated: false
      description: Patch bookmark order
      parameters:
      - description: List containing new order of bookmarks
        in: body
        name: new_order
        required: true
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties:
                order:
                  example: 3
                  format: int64
                  type: integer
              type: object
        description: '@bookmarks/PATCH_200_documentation_patch_bookmark_order.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  ok:
                    example: true
                    format: int64
                    type: integer
                type: object
          description: PATCH_200_documentation_patch_bookmark_order.json
      summary: Patch bookmark order
      tags:
      - bookmarks
    summary: summary
  /api/v3/bookmarks/{id_bookmark}:
    delete:
      deprecated: false
      description: Delete single bookmark TODO return None?
      parameters: []
      responses:
        '204':
          description: DELETE_204_documentation_delete_single_bookmark.json
      summary: Delete single bookmark  TODO return None?
      tags:
      - bookmarks
    description: ''
    get:
      deprecated: false
      description: Get single bookmark
      parameters:
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - name
            - app_name
            - url
            - color
            - icon
            - order
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  app_name:
                    example: app1
                    type: string
                  color:
                    properties:
                      background:
                        example: white
                        type: string
                      text:
                        example: black
                        type: string
                    type: object
                  icon:
                    example: mega
                    type: string
                  id:
                    format: uuid
                    type: string
                  name:
                    example: bookmark2
                    type: string
                  order:
                    example: 2
                    format: int64
                    type: integer
                  url:
                    example: https://impresaone.int.telmekom.net/applications
                    type: string
                type: object
          description: GET_200_documentation_get_single_bookmark.json
      summary: Get single bookmark
      tags:
      - bookmarks
    parameters:
    - description: Bookmark ID
      in: path
      name: id_bookmark
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch single bookmark
      parameters:
      - description: Bookmark color
        in: body
        name: color
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                color:
                  properties:
                    background:
                      example: white
                      type: string
                    text:
                      example: black
                      type: string
                  type: object
                icon:
                  default: null
                  example: mega
                  type: string
                name:
                  default: null
                  example: bookmark_updated
                  type: string
                order:
                  default: null
                  example: '2'
                  format: int64
                  type: integer
              type: object
        description: '@bookmarks/PATCH_200_documentation_patch_single_bookmark.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  ok:
                    example: true
                    format: int64
                    type: integer
                type: object
          description: PATCH_200_documentation_patch_single_bookmark.json
      summary: Patch single bookmark
      tags:
      - bookmarks
    summary: summary
  /api/v3/bp/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  service:
                    example: bp
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - bp
    parameters: []
    summary: summary
  /api/v3/bp/companies:
    description: ''
    get:
      deprecated: false
      description: Get all companies information TODO parameters
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: '# TODO'
        in: query
        name: search_key
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - name
            - id_country
            - vat
            - eu_vat
            - fiscal_number
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: name
          enum:
          - created
          - last_updated
          - name
          - display_name
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      - description: '# TODO'
        in: query
        name: force_ids
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    eu_vat:
                      type: 'null'
                    fiscal_number:
                      type: 'null'
                    id:
                      format: uuid
                      type: string
                    id_country:
                      type: 'null'
                    name:
                      example: Test
                      type: string
                    uid:
                      example: CHN84L7Y
                      type: string
                    vat:
                      type: 'null'
                  type: object
                type: array
          description: GET_200_documentation_get_all_companies.json
      summary: Get all companies information  TODO parameters
      tags:
      - bp
    parameters: []
    post:
      deprecated: false
      description: Post single company TODO RequestBody?
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  example: Test
                  type: string
              type: object
        description: '@bp/POST_201_documentation_post_single_company.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  active:
                    example: true
                    format: int64
                    type: integer
                  created:
                    format: date-time
                    type: string
                  created_by:
                    format: uuid
                    type: string
                  display_name:
                    example: Test
                    type: string
                  eu_vat:
                    type: 'null'
                  fiscal_number:
                    type: 'null'
                  id:
                    format: uuid
                    type: string
                  id_country:
                    type: 'null'
                  id_tenant:
                    format: uuid
                    type: string
                  last_updated:
                    format: date-time
                    type: string
                  last_updated_by:
                    format: uuid
                    type: string
                  name:
                    example: Test
                    type: string
                  number:
                    type: 'null'
                  social_media:
                    type: 'null'
                  uid:
                    example: CG4UAAU8
                    type: string
                  vat:
                    type: 'null'
                type: object
          description: POST_201_documentation_post_single_company.json
      summary: Post single company   TODO RequestBody?
      tags:
      - bp
    summary: summary
  /api/v3/bp/companies-and-sites-bulk-upload:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post bulk companies and sites TODO parameters
      parameters:
      - description: TODO
        in: body
        name: companies_with_sites
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post.request_body.json
                  type: string
              type: object
        description: '@bp/POST_201_documentation_post.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/bp/POST_201_documentation_post.json'
                    type: string
                type: object
          description: POST_201_documentation_post.json
      summary: Post bulk companies and sites    TODO parameters
      tags:
      - bp
    summary: summary
  /api/v3/bp/companies/{id_company}:
    description: ''
    get:
      deprecated: false
      description: Get single company information
      parameters:
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - name
            - id_country
            - vat
            - eu_vat
            - fiscal_number
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  eu_vat:
                    type: 'null'
                  fiscal_number:
                    type: 'null'
                  id:
                    format: uuid
                    type: string
                  id_country:
                    type: 'null'
                  name:
                    example: Test
                    type: string
                  uid:
                    example: CMBNVNX8
                    type: string
                  vat:
                    type: 'null'
                type: object
          description: GET_200_documentation_get_single_company.json
      summary: Get single company information
      tags:
      - bp
    parameters:
    - description: Company ID
      in: path
      name: id_company
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch single company
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  example: TEST
                  type: string
              type: object
        description: '@bp/PATCH_200_documentation_patch_single_company.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  updated:
                    example: true
                    format: int64
                    type: integer
                type: object
          description: PATCH_200_documentation_patch_single_company.json
      summary: Patch single company
      tags:
      - bp
    summary: summary
  /api/v3/bp/companies/{id_company}/sites:
    description: ''
    get:
      deprecated: false
      description: Get all company sites information
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - number
            - name
            - company_id
            - address_denomination
            - address
            - address_nr
            - id_city
            - city_zip
            - full_address
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: name
          enum:
          - created
          - last_updated
          - name
          - display_name
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    address:
                      type: 'null'
                    address_denomination:
                      example: adr1
                      type: string
                    address_nr:
                      example: '1'
                      type: string
                    city_zip:
                      example: '11000'
                      type: string
                    company_id:
                      format: uuid
                      type: string
                    full_address:
                      example: adr1 1
                      type: string
                    id:
                      format: uuid
                      type: string
                    id_city:
                      format: uuid
                      type: string
                    name:
                      example: test1
                      type: string
                    number:
                      type: 'null'
                    uid:
                      example: SLUNV7VB
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_company_sites.json
      summary: Get all company sites information
      tags:
      - bp
    parameters:
    - description: Company ID
      in: path
      name: id_company
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post single company site TODO RequestBody?
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address_denomination:
                  example: adr1
                  type: string
                address_nr:
                  example: '1'
                  type: string
                city_zip:
                  example: '11000'
                  type: string
                company_id:
                  format: uuid
                  type: string
                id_city:
                  format: uuid
                  type: string
                name:
                  example: test1
                  type: string
              type: object
        description: '@bp/POST_201_documentation_post_single_company_site.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  active:
                    example: true
                    format: int64
                    type: integer
                  address:
                    type: 'null'
                  address_denomination:
                    example: adr1
                    type: string
                  address_nr:
                    example: '1'
                    type: string
                  address_zip:
                    type: 'null'
                  city_zip:
                    example: '11000'
                    type: string
                  company_id:
                    format: uuid
                    type: string
                  created:
                    format: date-time
                    type: string
                  created_by:
                    format: uuid
                    type: string
                  display_name:
                    example: test1
                    type: string
                  full_address:
                    example: adr1 1
                    type: string
                  id:
                    format: uuid
                    type: string
                  id_city:
                    format: uuid
                    type: string
                  id_tenant:
                    format: uuid
                    type: string
                  last_updated:
                    format: date-time
                    type: string
                  last_updated_by:
                    format: uuid
                    type: string
                  name:
                    example: test1
                    type: string
                  number:
                    type: 'null'
                  uid:
                    example: SMEJKTW3
                    type: string
                type: object
          description: POST_201_documentation_post_single_company_site.json
      summary: Post single company site   TODO RequestBody?
      tags:
      - bp
    summary: summary
  /api/v3/bp/lookups:
    description: ''
    get:
      deprecated: false
      description: Get lookups TODO
      parameters:
      - description: Language of response
        in: query
        name: lang
        required: false
        schema:
          default: default
          type: string
      - description: ''
        in: query
        name: format
        required: false
        schema:
          default: default
          type: string
      - description: ''
        in: query
        name: format_frontend_key
        required: false
        schema:
          default: code
          type: string
      - description: ''
        in: query
        name: frontend_format
        required: false
        schema:
          default: list
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/GET_200_documentation_get.json'
                    type: string
                type: object
          description: GET_200_documentation_get.json
      summary: Get lookups   TODO
      tags:
      - bp
    parameters: []
    summary: summary
  /api/v3/bp/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post lookup TODO
      parameters:
      - description: Lookup
        in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post.request_body.json
                  type: string
              type: object
        description: '@TODO/POST_201_documentation_post.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/POST_201_documentation_post.json'
                    type: string
                type: object
          description: POST_201_documentation_post.json
      summary: Post lookup   TODO
      tags:
      - bp
    summary: summary
  /api/v3/bp/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: Get lookup from table TODO
      parameters:
      - description: ''
        in: body
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - description: ''
        in: body
        name: index_by
        required: false
        schema:
          default: id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/GET_200_documentation_get.json'
                    type: string
                type: object
          description: GET_200_documentation_get.json
      summary: Get lookup from table   TODO
      tags:
      - bp
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/bp/mk-cache/{table}:
    description: ''
    parameters:
    - description: Table
      in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch mk-cache TODO
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch.request_body.json
                  type: string
              type: object
        description: '@TODO/PATCH_200_documentation_patch.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/PATCH_200_documentation_patch.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch.json
      summary: Patch mk-cache  TODO
      tags:
      - bp
    summary: summary
  /api/v3/bp/persons:
    description: ''
    get:
      deprecated: false
      description: Get all persons information
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - first_name
            - last_name
            - company_site_id
            - full_address
            - display_name
            - fiscal_number
            - address_denomination
            - address
            - address_nr
            - address_zip
            - id_city
            - city_zip
            - educational_title
            - phonebook
            - emails
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: first_name
          enum:
          - created
          - last_updated
          - first_name
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    address:
                      type: 'null'
                    address_denomination:
                      type: 'null'
                    address_nr:
                      type: 'null'
                    address_zip:
                      type: 'null'
                    city_zip:
                      type: 'null'
                    company_site_id:
                      type: 'null'
                    display_name:
                      example: Igor Jeremic
                      type: string
                    educational_title:
                      example: <tortoise.fields.relational._NoneAwaitable object at
                        0x7f5124630940>
                      type: string
                    first_name:
                      example: Igor
                      type: string
                    fiscal_number:
                      type: 'null'
                    full_address:
                      example: ''
                      type: string
                    id:
                      format: uuid
                      type: string
                    id_city:
                      type: 'null'
                    last_name:
                      example: Jeremic
                      type: string
                    uid:
                      example: P9JGTA6AWE6
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_persons.json
      summary: Get all persons information
      tags:
      - bp
    parameters: []
    post:
      deprecated: false
      description: Post single person TODO RequestBody?
      requestBody:
        content:
          application/json:
            schema:
              properties:
                first_name:
                  example: Aleksandar
                  type: string
                last_name:
                  example: Stojkovic
                  type: string
              type: object
        description: '@bp/POST_201_documentation_post_single_persons.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  active:
                    example: true
                    format: int64
                    type: integer
                  address:
                    type: 'null'
                  address_denomination:
                    type: 'null'
                  address_nr:
                    type: 'null'
                  address_zip:
                    type: 'null'
                  birth_place:
                    type: 'null'
                  birthday:
                    type: 'null'
                  city_zip:
                    type: 'null'
                  company_site_id:
                    type: 'null'
                  created:
                    format: date-time
                    type: string
                  created_by:
                    format: uuid
                    type: string
                  display_name:
                    example: Aleksandar Stojkovic
                    type: string
                  educational_title_code:
                    type: 'null'
                  educational_title_id:
                    type: 'null'
                  educational_title_name:
                    type: 'null'
                  first_name:
                    example: Aleksandar
                    type: string
                  fiscal_number:
                    type: 'null'
                  full_address:
                    example: ''
                    type: string
                  gender_id:
                    type: 'null'
                  id:
                    format: uuid
                    type: string
                  id_city:
                    type: 'null'
                  id_tenant:
                    format: uuid
                    type: string
                  last_name:
                    example: Stojkovic
                    type: string
                  last_updated:
                    format: date-time
                    type: string
                  last_updated_by:
                    format: uuid
                    type: string
                  personal_document_id_number:
                    type: 'null'
                  personal_document_id_type_id:
                    type: 'null'
                  personal_document_id_uploaded_file_id_instance:
                    type: 'null'
                  personal_document_id_uploaded_file_instance:
                    type: 'null'
                  uid:
                    example: PVVPWEY7L6H
                    type: string
                type: object
          description: POST_201_documentation_post_single_persons.json
      summary: Post single person    TODO RequestBody?
      tags:
      - bp
    summary: summary
  /api/v3/bp/persons/{id_person}:
    description: ''
    get:
      deprecated: false
      description: Get single person information
      parameters:
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - first_name
            - last_name
            - company_site_id
            - full_address
            - display_name
            - fiscal_number
            - address_denomination
            - address
            - address_nr
            - address_zip
            - id_city
            - city_zip
            - educational_title
            - phonebook
            - emails
            type: string
          type: array
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  address:
                    type: 'null'
                  address_denomination:
                    type: 'null'
                  address_nr:
                    type: 'null'
                  address_zip:
                    type: 'null'
                  city_zip:
                    type: 'null'
                  company_site_id:
                    type: 'null'
                  display_name:
                    example: Stefan Kotarac
                    type: string
                  educational_title:
                    example: <tortoise.fields.relational._NoneAwaitable object at
                      0x7f5124630940>
                    type: string
                  first_name:
                    example: Stefan
                    type: string
                  fiscal_number:
                    type: 'null'
                  full_address:
                    example: ''
                    type: string
                  id:
                    format: uuid
                    type: string
                  id_city:
                    type: 'null'
                  last_name:
                    example: Kotarac
                    type: string
                  uid:
                    example: PJW8GKKRA6F
                    type: string
                type: object
          description: GET_200_documentation_get_single_person.json
      summary: Get single person information
      tags:
      - bp
    parameters:
    - description: Person ID
      in: path
      name: id_person
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch single person
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                last_name:
                  example: Test
                  type: string
              type: object
        description: '@bp/PATCH_200_documentation_patch_single_person.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  updated:
                    example: true
                    format: int64
                    type: integer
                type: object
          description: PATCH_200_documentation_patch_single_person.json
      summary: Patch single person
      tags:
      - bp
    summary: summary
  /api/v3/bp/persons/{id_person}/exists:
    description: ''
    get:
      deprecated: false
      description: Check if person exists
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                example: true
                format: int64
                type: integer
          description: GET_200_documentation_get_if_person_exists.json
      summary: Check if person exists
      tags:
      - bp
    parameters:
    - description: Person ID
      in: path
      name: id_person
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/bp/persons/{id_person}/o2m/{o2m_property}:
    description: ''
    get:
      deprecated: false
      description: TODO
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: TODO
      tags:
      - bp
    parameters:
    - description: Person ID
      in: path
      name: id_person
      required: true
      schema:
        type: string
      type: string
    - in: path
      name: o2m_property
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: TODO
      parameters:
      - in: body
        name: value
        required: true
        schema:
          type: string
      - in: body
        name: type_id
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - in: body
        name: connected_with_company_site_id
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - in: body
        name: id
        required: false
        schema:
          default: null
          format: uuid
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: TODO
      tags:
      - bp
    summary: summary
  /api/v3/bp/sites:
    description: ''
    get:
      deprecated: false
      description: Get all companies sites information TODO parameters
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 50
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - number
            - name
            - company_id
            - address_denomination
            - address
            - address_nr
            - id_city
            - city_zip
            - full_address
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: name
          enum:
          - created
          - last_updated
          - name
          - display_name
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      - description: '# TODO'
        in: query
        name: force_ids
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    address:
                      example: Cara Lazara
                      type: string
                    address_denomination:
                      type: 'null'
                    address_nr:
                      example: '16'
                      type: string
                    city_zip:
                      type: 'null'
                    company_id:
                      format: uuid
                      type: string
                    full_address:
                      example: Cara Lazara 16
                      type: string
                    id:
                      format: uuid
                      type: string
                    id_city:
                      type: 'null'
                    name:
                      example: Belgrade Main office
                      type: string
                    number:
                      example: '0001'
                      type: string
                    uid:
                      example: SGN96PWK
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_companies_sites.json
      summary: Get all companies sites information   TODO parameters
      tags:
      - bp
    parameters: []
    summary: summary
  /api/v3/bp/sites/{id_site}:
    description: ''
    get:
      deprecated: false
      description: Get single company site information
      parameters:
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - number
            - name
            - company_id
            - address_denomination
            - address
            - address_nr
            - id_city
            - city_zip
            - full_address
            type: string
          type: array
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - in: query
        name: id_company_site
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  address:
                    type: 'null'
                  address_denomination:
                    example: adr1
                    type: string
                  address_nr:
                    example: '1'
                    type: string
                  city_zip:
                    example: '11000'
                    type: string
                  company_id:
                    format: uuid
                    type: string
                  full_address:
                    example: adr1 1
                    type: string
                  id:
                    format: uuid
                    type: string
                  id_city:
                    format: uuid
                    type: string
                  name:
                    example: test1
                    type: string
                  number:
                    type: 'null'
                  uid:
                    example: SLX73RVY
                    type: string
                type: object
          description: GET_200_documentation_get_single_site.json
      summary: Get single company site information
      tags:
      - bp
    parameters:
    - description: Company site ID
      in: path
      name: id_site
      required: true
      schema:
        type: string
    summary: summary
  /api/v3/bp/sites/{id_site}/persons:
    description: ''
    get:
      deprecated: false
      description: 'Get company site employees # TODO'
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: null
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: null
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - first_name
            - last_name
            - company_site_id
            - full_address
            - display_name
            - fiscal_number
            - address_denomination
            - address
            - address_nr
            - address_zip
            - id_city
            - city_zip
            - educational_title
            - phonebook
            - emails
            type: string
          type: array
      - description: Result order
        in: query
        name: order_by
        required: false
        schema:
          default: first_name
          enum:
          - created
          - last_updated
          - first_name
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      - description: csv of ids
        in: query
        name: force_ids
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/bp/GET_200_test_documentation_get_company_site_employees.json'
                    type: string
                type: object
          description: GET_200_test_documentation_get_company_site_employees.json
      summary: 'Get company site employees  # TODO'
      tags:
      - bp
    parameters:
    - description: Company site ID
      in: path
      name: id_site
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/coverage/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  service:
                    example: coverage
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - coverage
    parameters: []
    summary: summary
  /api/v3/coverage/communes/:
    description: ''
    get:
      deprecated: false
      description: Get all communes
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          format: int64
          type: integer
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: id,name,istat_code,name_with_province_code
            enum:
            - id
            - name
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: name
          enum:
          - name
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: boolean
      - description: Limits response item number
        in: query
        name: force_limit
        required: false
        schema:
          default: 20
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    commune:
                      example: CROTONE (KR)
                      type: string
                    id:
                      format: uuid
                      type: string
                    istat:
                      example: '18101010'
                      type: string
                    name:
                      example: CROTONE
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_communes.json
      summary: Get all communes
      tags:
      - coverage
    parameters: []
    summary: summary
  /api/v3/coverage/communes/{id_commune}/streets:
    description: ''
    get:
      deprecated: false
      description: Get all streets from specific commune
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          format: int64
          type: integer
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - full_name
            - type
            - street_name
            - street_egon
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: created
          enum:
          - street_name
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: boolean
      - description: Limits response item number
        in: query
        name: force_limit
        required: false
        schema:
          default: 20
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      format: uuid
                      type: string
                    street:
                      example: TRAVERSA DI VIA VITTORIO VENETO
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_streets_from_specific_commune.json
      summary: Get all streets from specific commune
      tags:
      - coverage
    parameters:
    - description: Commune ID
      in: path
      name: id_commune
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/coverage/load_data:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Load data
      parameters:
      - description: Path of file to load data from
        in: body
        name: filepath
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  total_added:
                    example: 149
                    format: int64
                    type: integer
                type: object
          description: POST_200_documentation_post_load_data.json
      summary: Load data
      tags:
      - coverage
    summary: summary
  /api/v3/coverage/mk-cache/{table}:
    description: ''
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post cache
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: Post cache
      tags:
      - coverage
    summary: summary
  /api/v3/coverage/provinces/:
    description: ''
    get:
      deprecated: false
      description: Get all provinces
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          format: int64
          type: integer
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - name
            - code
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: name
          enum:
          - name
          - code
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: boolean
      - description: Limits response item number
        in: query
        name: force_limit
        required: false
        schema:
          default: 20
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    code:
                      example: CE
                      type: string
                    id:
                      format: uuid
                      type: string
                    name:
                      example: CASERTA
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_provinces.json
      summary: Get all provinces
      tags:
      - coverage
    parameters: []
    summary: summary
  /api/v3/coverage/streets/{id_street}/numbers:
    description: ''
    get:
      deprecated: false
      description: Get all numbers from specific street
      parameters:
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - number
            - egon
            - street_id
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: number
          enum:
          - number
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    egon:
                      example: '380100138643747'
                      type: string
                    id:
                      format: uuid
                      type: string
                    number:
                      example: '1'
                      type: string
                    street_id:
                      format: uuid
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_numbers_from_specific_street.json
      summary: Get all numbers from specific street
      tags:
      - coverage
    parameters:
    - description: Street ID
      in: path
      name: id_street
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/coverage/{id_address}:
    description: ''
    get:
      deprecated: false
      description: Get all coverage from specific address
      parameters:
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - number
            - egon
            - street_id
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: created
          enum:
          - number
          type: string
      - description: Limits response item number
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  ARMADIO_PADRE_SLU:
                    example: 86204F_04
                    type: string
                  CATEGORIA:
                    example: '1'
                    type: string
                  CIVICO_CLIENTE:
                    example: '1'
                    type: string
                  CLLI_CENTRALE_OLT_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  CODICE_EGON_CLIENTE:
                    example: '380130060918209'
                    type: string
                  CODICE_EGON_STRADA_CLIENTE:
                    example: '38000511871'
                    type: string
                  CODICE_ISTAT_COMUNE:
                    example: '13066100'
                    type: string
                  CODICE_TOP_CLIENTE:
                    example: '66_100_100063928_1'
                    type: string
                  CODICE_TOP_SITE:
                    example: '66_100_108344_3'
                    type: string
                  COMUNE_CLIENTE:
                    example: TIONE DEGLI ABRUZZI
                    type: string
                  COPERTURA_BITSTREAM_ASIM_ATM AL 23-05-2022:
                    example: 'NO'
                    type: string
                  COPERTURA_BITSTREAM_ASIM_ETHERNET AL 23-05-2022:
                    example: 'NO'
                    type: string
                  COPERTURA_BITSTREAM_NGA_VULA_FTTCab AL 23-05-2022:
                    example: 'NO'
                    type: string
                  COPERTURA_BITSTREAM_NGA_VULA_FTTH AL 23-05-2022:
                    example: 'NO'
                    type: string
                  COPERTURA_BITSTREAM_SIMM_ATM_1M_1.6M_4M_Bonding AL 23-05-2022:
                    example: 'NO'
                    type: string
                  COPERTURA_BITSTREAM_SIMM_ATM_2M_4M_6M_8M AL 23-05-2022:
                    example: 'NO'
                    type: string
                  COPERTURA_BITSTREAM_SIMM_ETHERNET_2M_4M_6M_8M_10M AL 23-05-2022:
                    example: 'NO'
                    type: string
                  COPERTURA_CIRCUITI_TERM_ETH_FIBRA_OTTICA AL 28-03-2022:
                    example: SI
                    type: string
                  COPERTURA_EVDSL_BITSTREAM_NGA_VULA_FTTCab AL 23-05-2022:
                    example: 'NO'
                    type: string
                  ? 'COPERTURA_FWA-W AL 23-12-2020

                    '
                  : example: 'NO'
                    type: string
                  COPERTURA_PER_PROSSIMITA:
                    example: SI
                    type: string
                  COPERTURA_SLU:
                    example: Sussidiario
                    type: string
                  COPERTURA_ULL:
                    example: 'NO'
                    type: string
                  COPERTURA_WLR AL 02-05-2022:
                    example: 'NO'
                    type: string
                  DISTANZA_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  DISTANZA_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  DISTANZA_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  DISTANZA_BITSTREAM_SIMM_ATM_1M_1.6M_4M_Bonding:
                    example: N.D.
                    type: string
                  DISTANZA_BITSTREAM_SIMM_ATM_2M_4M_6M_8M:
                    example: N.D.
                    type: string
                  DISTANZA_BITSTREAM_SIMM_ETHERNET_2M_4M_6M_8M_10M:
                    example: N.D.
                    type: string
                  DISTANZA_SLU:
                    example: N.D.
                    type: string
                  DISTANZA_ULL:
                    example: N.D.
                    type: string
                  DISTANZA_WLR:
                    example: N.D.
                    type: string
                  DR:
                    example: AM
                    type: string
                  EDR_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  EDR_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  EDR_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  EDR_BITSTREAM_NGA_VULA_FTTH:
                    example: N.D.
                    type: string
                  EDR_BITSTREAM_SIMM_ATM_1M_1.6M_4M_Bonding:
                    example: N.D.
                    type: string
                  EDR_BITSTREAM_SIMM_ATM_2M_4M_6M_8M:
                    example: N.D.
                    type: string
                  EDR_BITSTREAM_SIMM_ETHERNET_2M_4M_6M_8M_10M:
                    example: N.D.
                    type: string
                  EDR_CIRCUITI_TERM_ETH_FIBRA_OTTICA:
                    example: UNKNOWN
                    type: string
                  EDR_SLU:
                    example: 86204F_03
                    type: string
                  EDR_ULL:
                    example: N.D.
                    type: string
                  EDR_WLR:
                    example: N.D.
                    type: string
                  FASCIA_CIRCUITI_TERM_ETH_FIBRA_OTTICA:
                    example: UNKNOWN
                    type: string
                  FLAG_OPA:
                    example: 'NO'
                    type: string
                  PART_TOP_CLIENTE:
                    example: VIA
                    type: string
                  PIANIFICAZIONE_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  PIANIFICAZIONE_BITSTREAM_ASIM_ETH:
                    example: N.D.
                    type: string
                  PIANIFICAZIONE_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  PIANIFICAZIONE_BITSTREAM_NGA_VULA_FTTH:
                    example: N.D.
                    type: string
                  PIANIFICAZIONE_BITSTREAM_SIMM_ATM_1M_1.6M_4M_Bonding:
                    example: N.D.
                    type: string
                  PIANIFICAZIONE_BITSTREAM_SIMM_ATM_2M_4M_6M_8M:
                    example: N.D.
                    type: string
                  PIANIFICAZIONE_BITSTREAM_SIMM_ETHERNET_2M_4M_6M_8M_10M:
                    example: N.D.
                    type: string
                  PIANIFICAZIONE_CIRCUITI_TERM_ETH_FIBRA_OTTICA:
                    example: N.D.
                    type: string
                  PREVISIONE_AMPL_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  PREVISIONE_AMPL_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  PROGRESSIVO_RIGA al 23-05-2022:
                    example: '7'
                    type: string
                  PROVINCIA_CLIENTE:
                    example: L'AQUILA
                    type: string
                  STATO_SERVIZIO_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  STRADA_CLIENTE:
                    example: SANTA MARIA DEL PONTE
                    type: string
                  TIPO_DSLAM_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  TIPO_EDR_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  TIPO_EDR_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  TIPO_EDR_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  TIPO_EDR_BITSTREAM_NGA_VULA_FTTH:
                    example: N.D.
                    type: string
                  TIPO_EDR_BITSTREAM_SIMM_ATM_1M_1.6M_4M_Bonding:
                    example: N.D.
                    type: string
                  TIPO_EDR_BITSTREAM_SIMM_ATM_2M_4M_6M_8M:
                    example: N.D.
                    type: string
                  TIPO_EDR_BITSTREAM_SIMM_ETHERNET_2M_4M_6M_8M_10M:
                    example: N.D.
                    type: string
                  TIPO_EDR_CIRCUITI_TERM_ETH_FIBRA_OTTICA:
                    example: UNKNOWN
                    type: string
                  TIPO_EDR_SLU:
                    example: Armadio
                    type: string
                  TIPO_EDR_ULL:
                    example: N.D.
                    type: string
                  TIPO_EDR_WLR:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_11dB_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_11dB_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_12dB_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_12dB_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_6dB_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_6dB_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_EVDSL_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_SLU:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_ULL_ADSL2+:
                    example: N.D.
                    type: string
                  VELOCITA_DOWN_ULL_VDSL:
                    example: N.D.
                    type: string
                  VELOCITA_UP_11dB_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  VELOCITA_UP_11dB_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  VELOCITA_UP_12dB_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  VELOCITA_UP_12dB_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  VELOCITA_UP_6dB_BITSTREAM_ASIM_ATM:
                    example: N.D.
                    type: string
                  VELOCITA_UP_6dB_BITSTREAM_ASIM_ETHERNET:
                    example: N.D.
                    type: string
                  VELOCITA_UP_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  VELOCITA_UP_EVDSL_BITSTREAM_NGA_VULA_FTTCab:
                    example: N.D.
                    type: string
                  VELOCITA_UP_SLU:
                    example: N.D.
                    type: string
                  VELOCITA_UP_ULL_ADSL2+:
                    example: N.D.
                    type: string
                  VELOCITA_UP_ULL_VDSL:
                    example: N.D.
                    type: string
                type: object
          description: GET_200_documentation_get_all_coverage_from_specific_address.json
      summary: Get all coverage from specific address
      tags:
      - coverage
    parameters:
    - description: Address ID
      in: path
      name: id_address
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/documents/-/{id_document}:
    description: ''
    get:
      deprecated: false
      description: Get document TODO
      parameters:
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - filename
            - filesize
            - thumbnail
            - location
            - instance
            - id_instance
            type: string
          type: array
      responses:
        '418':
          description: Responses were not documented.
      summary: Get document TODO
      tags:
      - documents
    parameters:
    - description: Document ID
      in: path
      name: id_document
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch TODO
      parameters:
      - description: TODO
        in: body
        name: filename
        required: false
        schema:
          default: null
          type: string
      - description: TODO
        in: body
        name: thumbnail_data_b64
        required: false
        schema:
          default: null
          type: string
      - description: TODO
        in: body
        name: thumbnail_format
        required: false
        schema:
          default: png
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: Patch TODO
      tags:
      - documents
    summary: summary
  /api/v3/documents/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/documents/GET_200_documentation_about.json'
                    type: string
                type: object
          description: GET_200_documentation_about.json
      summary: Get about information
      tags:
      - documents
    parameters: []
    summary: summary
  /api/v3/documents/{instance}/{id_instance}:
    description: ''
    get:
      deprecated: false
      description: Get document instance TODO
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - filename
            - filesize
            - thumbnail
            - location
            - instance
            - id_instance
            type: string
          type: array
      - description: Result order
        in: query
        name: order_by
        required: false
        schema:
          default: created
          enum:
          - created
          - filename
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '418':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/documents/test_documentation_get_documents_instance.json'
                    type: string
                type: object
          description: test_documentation_get_documents_instance.json
      summary: Get document instance   TODO
      tags:
      - documents
    parameters:
    - description: TODO
      in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    - description: TODO
      in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post document TODO
      parameters:
      - description: File name
        in: body
        name: filename
        required: true
        schema:
          type: string
      - description: TODO
        in: body
        name: bse64encoded
        required: true
        schema:
          type: string
      - description: TODO
        in: body
        name: make_thumbnail
        required: false
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_documents_instance.request_body.json
                  type: string
              type: object
        description: '@documents/POST_200_documentation_post_documents_instance.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/documents/POST_200_documentation_post_documents_instance.json'
                    type: string
                type: object
          description: POST_200_documentation_post_documents_instance.json
      summary: Post document   TODO
      tags:
      - documents
    summary: summary
  /api/v3/files/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/files/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - files
    parameters: []
    summary: summary
  /api/v3/files/static/{id_document_with_type}:
    description: ''
    get:
      deprecated: false
      description: Get TODO parameters
      parameters:
      - description: TODO
        in: query
        name: include_body
        required: false
        schema:
          default: true
          type: boolean
      - description: ''
        in: query
        name: token
        required: false
        schema:
          default: null
          type: string
      - description: ''
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/files/GET_200_documentation_get_.json'
                    type: string
                type: object
          description: GET_200_documentation_get_.json
      summary: Get TODO parameters
      tags:
      - files
    parameters:
    - description: TODO
      in: path
      name: id_document_with_type
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/flows/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  service:
                    example: flows
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - flows
    parameters: []
    summary: summary
  /api/v3/flows/lookups:
    description: ''
    get:
      deprecated: false
      description: Get lookups TODO
      parameters:
      - description: ''
        in: query
        name: format
        required: false
        schema:
          default: default
          type: string
      - description: Language of response
        in: query
        name: lang
        required: false
        schema:
          default: default
          type: string
      - description: ''
        in: query
        name: format_frontend_key
        required: false
        schema:
          default: code
          type: string
      - description: ''
        in: query
        name: frontend_format
        required: false
        schema:
          default: list
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/flows/GET_200_documentation_get_lookups.json'
                    type: string
                type: object
          description: GET_200_documentation_get_lookups.json
      summary: Get lookups TODO
      tags:
      - flows
    parameters: []
    summary: summary
  /api/v3/flows/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post lookup TODO
      parameters:
      - description: Lookup name
        in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post.request_body.json
                  type: string
              type: object
        description: '@flows/POST_201_documentation_post.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/flows/POST_201_documentation_post.json'
                    type: string
                type: object
          description: POST_201_documentation_post.json
      summary: Post lookup TODO
      tags:
      - flows
    summary: summary
  /api/v3/flows/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: Get lookup from table. TODO
      parameters:
      - description: ''
        in: query
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - description: ''
        in: query
        name: index_by
        required: false
        schema:
          default: id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/flows/GET_200_documentation_get_lookup_from_table.json'
                    type: string
                type: object
          description: GET_200_documentation_get_lookup_from_table.json
      summary: Get lookup from table. TODO
      tags:
      - flows
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/flows/multiply:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post multiply TODO tests
      parameters:
      - description: ''
        in: body
        name: list_of_new_flow_messages
        required: true
        schema:
          items:
            type: string
          type: array
      - description: ''
        in: body
        name: expected_count_in_result
        required: false
        schema:
          default: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_multiply.request_body.json
                  type: string
              type: object
        description: '@flows/POST_200_documentation_post_multiply.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/flows/POST_200_documentation_post_multiply.json'
                    type: string
                type: object
          description: POST_200_documentation_post_multiply.json
      summary: Post multiply TODO tests
      tags:
      - flows
    summary: summary
  /api/v3/flows/{instance}/{id_instance}:
    description: ''
    get:
      deprecated: false
      description: Get single flow instance TODO parameters
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - created
            - type_id
            - html
            - data
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: -created
          enum:
          - created
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      - description: TODO
        in: query
        name: flow_types
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    created:
                      format: date-time
                      type: string
                    data:
                      properties:
                        '1':
                          example: '2'
                          type: string
                      type: object
                    html:
                      example: <p>Test2</p>
                      type: string
                    type_id:
                      format: uuid
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_single_flow_instance.json
      summary: Get single flow instance TODO parameters
      tags:
      - flows
    parameters:
    - description: '# TODO'
      in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    - description: ''
      in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post single flow instance TODO parameters
      parameters:
      - description: TODO
        in: body
        name: data
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: TODO
        in: body
        name: attached_documents
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: Bool value. If true, response body will return number of all
          flow instances.
        in: body
        name: expected_count_in_result
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    a:
                      example: b
                      type: string
                  type: object
                html:
                  default: null
                  example: <p>Test</p>
                  type: string
                text:
                  default: null
                  example: Test
                  type: string
                type_id:
                  format: uuid
                  type: string
              required:
              - type_id
              type: object
        description: '@flows/POST_200_documentation_post_single_flow_instance.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
          description: POST_200_documentation_post_single_flow_instance.json
      summary: Post single flow instance   TODO parameters
      tags:
      - flows
    summary: summary
  /api/v3/flows/{instance}/{id_instance}/count:
    description: ''
    get:
      deprecated: false
      description: Get the number of ? TODO
      parameters:
      - description: TODO
        in: query
        name: type_id
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - description: TODO
        in: query
        name: command
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    example: 2
                    format: int64
                    type: integer
                type: object
          description: GET_200_documentation_get_instance_count.json
      summary: Get the number of ? TODO
      tags:
      - flows
    parameters:
    - description: TODO
      in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    - description: Instance ID
      in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/flows/{instance}/{id_instance}/last:
    description: ''
    get:
      deprecated: false
      description: Get the last created instance info TODO parameters
      parameters:
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - created
            - type_id
            - html
            - data
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  created:
                    format: date-time
                    type: string
                  data:
                    properties:
                      '1':
                        example: '2'
                        type: string
                    type: object
                  html:
                    example: <p>Test2</p>
                    type: string
                  type_id:
                    format: uuid
                    type: string
                type: object
          description: GET_200_documentation_get_last_instance.json
      summary: Get the last created instance info  TODO parameters
      tags:
      - flows
    parameters:
    - description: '# TODO'
      in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    - description: Instance ID
      in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/geoloc/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  service:
                    example: geoloc
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - geoloc
    parameters: []
    summary: summary
  /api/v3/geoloc/countries:
    description: ''
    get:
      deprecated: false
      description: Get all countries
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - en_value
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: en_value
          enum:
          - en_value
          - local_value
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    en_value:
                      example: Austria
                      type: string
                    id:
                      format: uuid
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_countries.json
      summary: Get all countries
      tags:
      - geoloc
    parameters: []
    summary: summary
  /api/v3/geoloc/countries/import:
    description: ''
    parameters: []
    patch:
      deprecated: false
      description: Import all countries
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    example_was_not_specified:
                      type: string
                  type: object
              required:
              - data
              type: object
        description: '@geoloc/PATCH_200_documentation_patch_import_all_countries.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  added:
                    example: 0
                    format: int64
                    type: integer
                  skipped:
                    example: 0
                    format: int64
                    type: integer
                  updated:
                    example: 0
                    format: int64
                    type: integer
                type: object
          description: PATCH_200_documentation_patch_import_all_countries.json
      summary: Import all countries
      tags:
      - geoloc
    summary: summary
  /api/v3/geoloc/countries/{id_country}/import:
    description: ''
    parameters:
    - description: Country ID
      in: path
      name: id_country
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Import specific country
      parameters:
      - description: JSON file containing all information about a country
        in: body
        name: data
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    municipalities:
                      items:
                        properties:
                          id:
                            format: uuid
                            type: string
                          id_province:
                            format: uuid
                            type: string
                          local_value:
                            example: TIONE DEGLI ABRUZZI
                            type: string
                          translations:
                            properties:
                              it:
                                example: TIONE DEGLI ABRUZZI
                                type: string
                            type: object
                        type: object
                      type: array
                    provinces:
                      items:
                        properties:
                          code:
                            example: AG
                            type: string
                          id:
                            format: uuid
                            type: string
                          id_region:
                            format: uuid
                            type: string
                          local_value:
                            example: Agrigento
                            type: string
                          translations:
                            properties:
                              de:
                                example: Agrigent
                                type: string
                              en:
                                example: Agrigento
                                type: string
                              it:
                                example: Agrigento
                                type: string
                            type: object
                        type: object
                      type: array
                    regions:
                      items:
                        properties:
                          id:
                            format: uuid
                            type: string
                          local_value:
                            example: Sicilia
                            type: string
                          translations:
                            properties:
                              de:
                                example: Sizilien
                                type: string
                              en:
                                example: Sicily
                                type: string
                              it:
                                example: Sicilia
                                type: string
                            type: object
                        type: object
                      type: array
                  type: object
              type: object
        description: '@geoloc/PATCH_200_documentation_patch_import_specific_country.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  municipalities:
                    properties:
                      added:
                        example: 7928
                        format: int64
                        type: integer
                      skipped:
                        example: 0
                        format: int64
                        type: integer
                      updated:
                        example: 0
                        format: int64
                        type: integer
                    type: object
                  provinces:
                    properties:
                      added:
                        example: 107
                        format: int64
                        type: integer
                      skipped:
                        example: 0
                        format: int64
                        type: integer
                      updated:
                        example: 0
                        format: int64
                        type: integer
                    type: object
                  regions:
                    properties:
                      added:
                        example: 20
                        format: int64
                        type: integer
                      skipped:
                        example: 0
                        format: int64
                        type: integer
                      updated:
                        example: 0
                        format: int64
                        type: integer
                    type: object
                type: object
          description: PATCH_200_documentation_patch_import_specific_country.json
      summary: Import specific country
      tags:
      - geoloc
    summary: summary
  /api/v3/geoloc/countries/{id_country}/provinces:
    description: ''
    get:
      deprecated: false
      description: Get all country provinces
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - province_id
            - local_value
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: local_value
          enum:
          - local_value
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      format: uuid
                      type: string
                    local_value:
                      example: Bolzano
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_country_provinces.json
      summary: Get all country provinces
      tags:
      - geoloc
    parameters:
    - description: Country ID
      in: path
      name: id_country
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/geoloc/countries/{id_country}/regions:
    description: ''
    get:
      deprecated: false
      description: Get all country regions
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - local_value
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: local_value
          enum:
          - local_value
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      format: uuid
                      type: string
                    local_value:
                      example: Lombardia
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_country_regions.json
      summary: Get all country regions
      tags:
      - geoloc
    parameters:
    - description: Country ID
      in: path
      name: id_country
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/geoloc/lookup-test/{tbl}:
    description: ''
    get:
      deprecated: false
      description: Get all lookups from table.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/geoloc/GET_200_documentation_get_lookup_tests.json'
                    type: string
                type: object
          description: GET_200_documentation_get_lookup_tests.json
      summary: Get all lookups from table.
      tags:
      - geoloc
    parameters:
    - description: Table
      in: path
      name: tbl
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/geoloc/lookups:
    description: ''
    get:
      deprecated: false
      description: Get lookups. TODO
      parameters:
      - description: Language of response
        in: query
        name: lang
        required: false
        schema:
          default: default
          type: string
      - description: ''
        in: query
        name: format
        required: false
        schema:
          default: default
          type: string
      - description: ''
        in: query
        name: format_frontend_key
        required: false
        schema:
          default: code
          type: string
      - description: ''
        in: query
        name: frontend_format
        required: false
        schema:
          default: list
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/geoloc/GET_200_documentation_get.json'
                    type: string
                type: object
          description: GET_200_documentation_get.json
      summary: Get lookups. TODO
      tags:
      - geoloc
    parameters: []
    summary: summary
  /api/v3/geoloc/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post lookup. TODO
      parameters:
      - description: ''
        in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post.request_body.json
                  type: string
              type: object
        description: '@geoloc/POST_201_documentation_post.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/geoloc/POST_201_documentation_post.json'
                    type: string
                type: object
          description: POST_201_documentation_post.json
      summary: Post lookup. TODO
      tags:
      - geoloc
    summary: summary
  /api/v3/geoloc/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: Get lookups. TODO
      parameters:
      - description: ''
        in: query
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - description: ''
        in: query
        name: index_by
        required: false
        schema:
          default: id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/geoloc/GET_200_documentation_get.json'
                    type: string
                type: object
          description: GET_200_documentation_get.json
      summary: Get lookups. TODO
      tags:
      - geoloc
    parameters:
    - description: Table
      in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/geoloc/provinces/{id_province}/municipalities:
    description: ''
    get:
      deprecated: false
      description: Get all provinces municipalities
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - zip
            - local_value
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: local_value
          enum:
          - local_value
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      format: uuid
                      type: string
                    local_value:
                      example: Bolzano
                      type: string
                    zip:
                      type: 'null'
                  type: object
                type: array
          description: GET_200_documentation_get_all_municipalities_from_province.json
      summary: Get all provinces municipalities
      tags:
      - geoloc
    parameters:
    - description: Province ID
      in: path
      name: id_province
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/geoloc/regions/{id_region}/provinces:
    description: ''
    get:
      deprecated: false
      description: Get all region provinces
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - province_id
            - local_value
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: local_value
          enum:
          - local_value
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      format: uuid
                      type: string
                    local_value:
                      example: Bolzano
                      type: string
                  type: object
                type: array
          description: GET_200_documentation_get_all_regions_provinces.json
      summary: Get all region provinces
      tags:
      - geoloc
    parameters:
    - description: Region ID
      in: path
      name: id_region
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/kanban/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - kanban
    parameters: []
    summary: summary
  /api/v3/kanban/all-buckets:
    description: ''
    get:
      deprecated: false
      description: Get all kanban buckets
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_documentation_get_all_buckets.json'
                    type: string
                type: object
          description: GET_200_documentation_get_all_buckets.json
      summary: Get all kanban buckets
      tags:
      - kanban
    parameters: []
    summary: summary
  /api/v3/kanban/boards/{id_board}/buckets:
    description: ''
    get:
      deprecated: false
      description: Get all kanban buckets for a specific board.
      parameters:
      - description: CSV fields. If nothing provided all fields will be displayed
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - name
            - text_color
            - background_color
            - deleted
            - order
            type: string
          type: array
      - description: Order of kanban buckets. If order chosen user will get his specific
          order
        in: query
        name: order
        required: false
        schema:
          default: order
          enum:
          - order
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_get_all_buckets_documentation.json'
                    type: string
                type: object
          description: GET_200_get_all_buckets_documentation.json
      summary: Get all kanban buckets for a specific board.
      tags:
      - kanban
    parameters:
    - in: path
      name: id_board
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Create a kanban bucket.
      parameters:
      - description: name of a kanban bucket
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: background color of a kanban bucket
        in: body
        name: background_color
        required: false
        schema:
          default: null
          type: string
      - description: text color of a kanban bucket
        in: body
        name: text_color
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_create_kanban_bucket.request_body.json
                  type: string
              type: object
        description: '@kanban/POST_201_create_kanban_bucket.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/POST_201_create_kanban_bucket.json'
                    type: string
                type: object
          description: POST_201_create_kanban_bucket.json
      summary: Create a kanban bucket.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/boards/{id_board}/buckets/order:
    description: ''
    get:
      deprecated: false
      description: Get ordering od kanban boards inside specific project. Not personalized
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_documentation_get_bucket_ordering.json'
                    type: string
                type: object
          description: GET_200_documentation_get_bucket_ordering.json
      summary: Get ordering od kanban boards inside specific project. Not personalized
      tags:
      - kanban
    parameters:
    - description: ID of a board
      in: path
      name: id_board
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Change order for kanban buckets.
      parameters:
      - description: new order of kanban buckets. List should contain id's of kanban
          buckets
        in: body
        name: new_order
        required: true
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_reorder_buckets_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_reorder_buckets_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_reorder_buckets_documentation.json'
                    type: string
                type: object
          description: PATCH_200_reorder_buckets_documentation.json
      summary: Change order for kanban buckets.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/boards/{id_board}/hidden:
    description: ''
    get:
      deprecated: false
      description: Get single kanban board hidden status.
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: Get single kanban board hidden status.
      tags:
      - kanban
    parameters:
    - in: path
      name: id_board
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Change hidden status for a kanban board.
      parameters:
      - description: hidden property of kanban board
        in: body
        name: hidden
        required: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_change_hidden_status_for_kanban_board.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_change_hidden_status_for_kanban_board.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_change_hidden_status_for_kanban_board.json'
                    type: string
                type: object
          description: PATCH_200_change_hidden_status_for_kanban_board.json
      summary: Change hidden status for a kanban board.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/boards/{id_board}/starred:
    description: ''
    get:
      deprecated: false
      description: Get single kanban board starred status.
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: Get single kanban board starred status.
      tags:
      - kanban
    parameters:
    - in: path
      name: id_board
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Change starred status for a kanban board.
      parameters:
      - description: starred property of kanban board
        in: body
        name: starred
        required: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_change_starred_status_for_kanban_board.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_change_starred_status_for_kanban_board.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_change_starred_status_for_kanban_board.json'
                    type: string
                type: object
          description: PATCH_200_change_starred_status_for_kanban_board.json
      summary: Change starred status for a kanban board.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/boards/{id}:
    delete:
      deprecated: false
      description: Delete single kanban board.
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: Delete single kanban board.
      tags:
      - kanban
    description: ''
    get:
      deprecated: false
      description: Get single kanban board created by user.
      parameters:
      - description: include items will return all items for a specific kanban board.
          Default is true
        in: query
        name: include_items
        required: false
        schema:
          default: true
          type: boolean
      - description: Assignees
        in: query
        name: assignees
        required: false
        schema:
          default: null
          type: string
      - description: Responsibles
        in: query
        name: responsibles
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_create_ticket_and_get_single_board_documentation.json'
                    type: string
                type: object
          description: GET_200_create_ticket_and_get_single_board_documentation.json
      summary: Get single kanban board created by user.
      tags:
      - kanban
    parameters:
    - description: ID of a board
      in: path
      name: id
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch method for updating single kanban board.
      parameters:
      - description: new name for kanban board
        in: body
        name: name
        required: false
        schema:
          default: null
          type: string
      - description: new project id for kanban board (used for drag and drop to a
          new project)
        in: body
        name: id_project
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - description: new position inside new project for board
        in: body
        name: my_position_in_a_new_project
        required: false
        schema:
          default: 0
          format: int64
          type: integer
      - description: by default is false. If true it will return all properties for
          particular board, if false it will return list of updated properties
        in: body
        name: return_whole_object
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_drag_and_drop_action_move_board_from_one_project_to_another_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_drag_and_drop_action_move_board_from_one_project_to_another_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_drag_and_drop_action_move_board_from_one_project_to_another_documentation.json'
                    type: string
                type: object
          description: PATCH_200_drag_and_drop_action_move_board_from_one_project_to_another_documentation.json
      summary: Patch method for updating single kanban board.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/boards/{id}/structure_info:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: id_board
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - kanban
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    summary: summary
  /api/v3/kanban/buckets/{id_bucket}/assign/{instance}:
    description: ''
    parameters:
    - description: ID of a kanban bucket
      in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    - description: assigned instance, ticket, wiki, etc
      in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Assign an instance to a kanban bucket
      parameters:
      - description: Instance ID
        in: body
        name: id_instance
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_assign_ticket_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/POST_200_assign_ticket_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/POST_200_assign_ticket_documentation.json'
                    type: string
                type: object
          description: POST_200_assign_ticket_documentation.json
      summary: Assign an instance to a kanban bucket
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/buckets/{id_bucket}/boards/{id_board}:
    description: ''
    parameters:
    - in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    - in: path
      name: id_board
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Move bucket to another board.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_move_bucket_to_another_board_documentation.json'
                    type: string
                type: object
          description: PATCH_200_move_bucket_to_another_board_documentation.json
      summary: Move bucket to another board.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/buckets/{id_bucket}/create/{instance}:
    description: ''
    parameters:
    - description: ID of a kanban bucket
      in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    - description: assigned instance, ticket, wiki, etc
      in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Create a quick ticket and assign it to a kanban bucket.
      parameters:
      - in: body
        name: description
        required: true
        schema:
          type: string
      - in: body
        name: title
        required: false
        schema:
          default: null
          type: string
      - in: body
        name: type
        required: false
        schema:
          default: null
          type: string
      - in: body
        name: priority
        required: false
        schema:
          default: null
          type: string
      - in: body
        name: department
        required: false
        schema:
          default: null
          type: string
      - in: body
        name: responsible
        required: false
        schema:
          default: null
          type: string
      - in: body
        name: attachments
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - in: body
        name: deadline
        required: false
        schema:
          default: null
          type: string
      - in: body
        name: assistants
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_create_quick_ticket_and_assign_it_to_an_item_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/POST_200_create_quick_ticket_and_assign_it_to_an_item_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/POST_200_create_quick_ticket_and_assign_it_to_an_item_documentation.json'
                    type: string
                type: object
          description: POST_200_create_quick_ticket_and_assign_it_to_an_item_documentation.json
      summary: Create a quick ticket and assign it to a kanban bucket.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/buckets/{id_bucket}/exists:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - kanban
    parameters:
    - in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/kanban/buckets/{id_bucket}/info:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - kanban
    parameters:
    - in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/kanban/buckets/{id_bucket}/items:
    description: ''
    get:
      deprecated: false
      description: Get all kanban items for a specific bucket
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_get_all_items_documentation.json'
                    type: string
                type: object
          description: GET_200_get_all_items_documentation.json
      summary: Get all kanban items for a specific bucket
      tags:
      - kanban
    parameters:
    - description: ID of a kanban bucket
      in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Create a kanban item TODO
      parameters:
      - description: assigned instance, ticket, wiki, etc
        in: path
        name: instance
        required: false
        schema:
          default: null
          type: string
      - description: Instance ID
        in: body
        name: id_instance
        required: false
        schema:
          default: null
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        description: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_get_all_items_documentation.json'
                    type: string
                type: object
          description: GET_200_get_all_items_documentation.json
      summary: Create a kanban item TODO
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/buckets/{id_bucket}/items/order:
    description: ''
    get:
      deprecated: false
      description: Get order of kanban items inside specific bucket
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_get_items_order_documentation.json'
                    type: string
                type: object
          description: GET_200_get_items_order_documentation.json
      summary: Get order of kanban items inside specific bucket
      tags:
      - kanban
    parameters:
    - description: id of a bucket
      in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Transfer kanban item to another bucket.
      parameters:
      - description: new order for kanban items. List consists of kanban items id's
        in: body
        name: new_order
        required: true
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_reordering_items_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_reordering_items_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_reordering_items_documentation.json'
                    type: string
                type: object
          description: PATCH_200_reordering_items_documentation.json
      summary: Transfer kanban item to another bucket.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/buckets/{id}:
    delete:
      deprecated: false
      description: Delete a kanban bucket
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: Delete a kanban bucket
      tags:
      - kanban
    description: ''
    get:
      deprecated: false
      description: Get single kanban bucket
      parameters:
      - description: CSV fields. If nothing provided all fields will be displayed
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - name
            - text_color
            - background_color
            - deleted
            - order
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_get_single_kanban_bucket.json'
                    type: string
                type: object
          description: GET_200_get_single_kanban_bucket.json
      summary: Get single kanban bucket
      tags:
      - kanban
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Update a kanban bucket.
      parameters:
      - description: name of a kanban bucket
        in: body
        name: name
        required: false
        schema:
          default: null
          type: string
      - description: background color of a kanban bucket
        in: body
        name: background_color
        required: false
        schema:
          default: null
          type: string
      - description: text color of a kanban bucket
        in: body
        name: text_color
        required: false
        schema:
          default: null
          type: string
      - description: by default is false. If true it will return all properties for
          particular board, if false it will return list of updated properties
        in: body
        name: return_whole_object
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_patch_single_kanban_bucket_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_patch_single_kanban_bucket_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_patch_single_kanban_bucket_documentation.json'
                    type: string
                type: object
          description: PATCH_200_patch_single_kanban_bucket_documentation.json
      summary: Update a kanban bucket.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/fetch-ticket-info:
    description: ''
    parameters: []
    patch:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/item/{id_item}/update_cache:
    description: ''
    parameters:
    - in: path
      name: id_item
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Update cache
      parameters:
      - in: body
        name: data
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: Update cache
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/items/{id_item}:
    delete:
      deprecated: false
      description: Delete a kanban item TODO
      parameters:
      - description: ''
        in: query
        name: change_status
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/DELETE_200_delete_single_board_documentation.json'
                    type: string
                type: object
          description: DELETE_200_delete_single_board_documentation.json
      summary: Delete a kanban item TODO
      tags:
      - kanban
    description: ''
    parameters:
    - description: ID of an item
      in: path
      name: id_item
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/kanban/items/{id_item}/bucket/{id_bucket}:
    description: ''
    parameters:
    - description: id of an item
      in: path
      name: id_item
      required: true
      schema:
        type: string
      type: string
    - description: id of a bucket
      in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Transfer kanban item to another bucket.
      parameters:
      - description: Position of an item in new bucket
        in: body
        name: position
        required: false
        schema:
          default: null
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_patch_item_drag_and_drop_to_another_bucket_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_patch_item_drag_and_drop_to_another_bucket_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_patch_item_drag_and_drop_to_another_bucket_documentation.json'
                    type: string
                type: object
          description: PATCH_200_patch_item_drag_and_drop_to_another_bucket_documentation.json
      summary: Transfer kanban item to another bucket.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/kanban-mk-cache-for-all-tickets:
    description: ''
    parameters: []
    patch:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/projects:
    description: ''
    get:
      deprecated: false
      description: Get all kanban projects created by user.
      parameters:
      - description: CSV fields. If nothing provided all fields will be returned
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - name
            - order
            type: string
          type: array
      - description: If include_boards=false response will be without boards inside
          projects
        in: query
        name: include_boards
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_get_all_boards_and_create_json_documentation.json'
                    type: string
                type: object
          description: GET_200_get_all_boards_and_create_json_documentation.json
      summary: Get all kanban projects created by user.
      tags:
      - kanban
    parameters: []
    post:
      deprecated: false
      description: Create a kanban project.
      parameters:
      - description: Name of the project
        in: body
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_get_all_projects_create_json_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/POST_201_get_all_projects_create_json_documentation.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/POST_201_get_all_projects_create_json_documentation.json'
                    type: string
                type: object
          description: POST_201_get_all_projects_create_json_documentation.json
      summary: Create a kanban project.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/projects-order:
    description: ''
    get:
      deprecated: false
      description: Get personalized order for Kanban projects
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_reorder_projects_and_create_json_documentation.json'
                    type: string
                type: object
          description: PATCH_200_reorder_projects_and_create_json_documentation.json
      summary: Get personalized order for Kanban projects
      tags:
      - kanban
    parameters: []
    patch:
      deprecated: false
      description: Change Kanban projects order for user.
      parameters:
      - description: new order of Kanban projects
        in: body
        name: new_order
        required: true
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_reorder_projects_and_create_json_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_reorder_projects_and_create_json_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_reorder_projects_and_create_json_documentation.json'
                    type: string
                type: object
          description: PATCH_200_reorder_projects_and_create_json_documentation.json
      summary: Change Kanban projects order for user.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/projects-with-boards-and-buckets:
    description: ''
    get:
      deprecated: false
      description: Get all projects with their boards and buckets
      parameters:
      - description: Shows
        in: query
        name: show_empty_boards
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_documentation_get_all_projects.json'
                    type: string
                type: object
          description: GET_200_documentation_get_all_projects.json
      summary: Get all projects with their boards and buckets
      tags:
      - kanban
    parameters: []
    summary: summary
  /api/v3/kanban/projects/collapse-all/{action}:
    description: ''
    parameters:
    - description: action, toggle,collapse, or expand. If toggle, last used action
        by user will be taken into consideration
      in: path
      name: action
      required: true
      schema:
        format: str
        type: string
      type: string
    patch:
      deprecated: false
      description: Collapse/Expend all kanban projects
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_collapse_uncollapse_all.json'
                    type: string
                type: object
          description: PATCH_200_collapse_uncollapse_all.json
      summary: Collapse/Expend all kanban projects
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/projects/projects4user:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - kanban
    parameters: []
    summary: summary
  /api/v3/kanban/projects/{id_project}/boards:
    description: ''
    get:
      deprecated: false
      description: Get all kanban boards for a specific project.
      parameters:
      - description: CSV fields. If nothing provided all fields will be displayed
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - name
            - order
            type: string
          type: array
      - description: Order of kanban boards. If order chosen user will get his personalized
          order
        in: query
        name: order
        required: false
        schema:
          default: order
          enum:
          - created
          - order
          type: string
      - description: If including_buckets=false response will be without buckets inside
          boards
        in: query
        name: including_buckets
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_get_all_boards_and_create_json_documentation.json'
                    type: string
                type: object
          description: GET_200_get_all_boards_and_create_json_documentation.json
      summary: Get all kanban boards for a specific project.
      tags:
      - kanban
    parameters:
    - in: path
      name: id_project
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Create a kanban boards for specific project.
      parameters:
      - description: name of a kanban board
        in: body
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_create_new_kanban_board_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/POST_201_create_new_kanban_board_documentation.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/POST_201_create_new_kanban_board_documentation.json'
                    type: string
                type: object
          description: POST_201_create_new_kanban_board_documentation.json
      summary: Create a kanban boards for specific project.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/projects/{id_project}/boards/order:
    description: ''
    get:
      deprecated: false
      description: Get personalized ordering od kanban boards inside specific project
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_get_boards_order_documentation.json'
                    type: string
                type: object
          description: GET_200_get_boards_order_documentation.json
      summary: Get personalized ordering od kanban boards inside specific project
      tags:
      - kanban
    parameters:
    - in: path
      name: id_project
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Change order for kanban boards.
      parameters:
      - description: new order of kanban boards. List contains id's of kanban boards
        in: body
        name: new_order
        required: true
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_change_boards_order_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_change_boards_order_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_change_boards_order_documentation.json'
                    type: string
                type: object
          description: PATCH_200_change_boards_order_documentation.json
      summary: Change order for kanban boards.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/projects/{id_project}/closed:
    description: ''
    get:
      deprecated: false
      description: Get single kanban project closed status.
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: Get single kanban project closed status.
      tags:
      - kanban
    parameters:
    - description: Id of a project
      in: path
      name: id_project
      required: true
      schema:
        format: uuid
        type: string
      type: string
    patch:
      deprecated: false
      description: Change closed status for a Kanban project.
      parameters:
      - description: closed property of Kanban Project
        in: body
        name: closed
        required: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_get_single_project_closed_status_and_create_json_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_get_single_project_closed_status_and_create_json_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_get_single_project_closed_status_and_create_json_documentation.json'
                    type: string
                type: object
          description: PATCH_200_get_single_project_closed_status_and_create_json_documentation.json
      summary: Change closed status for a Kanban project.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/projects/{id_project}/hidden:
    description: ''
    get:
      deprecated: false
      description: Get single kanban project hidden status.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_documentation_get_board_hidden_status.json'
                    type: string
                type: object
          description: GET_200_documentation_get_board_hidden_status.json
      summary: Get single kanban project hidden status.
      tags:
      - kanban
    parameters:
    - description: ID of a project
      in: path
      name: id_project
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Change hidden status for a Kanban project.
      parameters:
      - description: hidden property of Kanban Project
        in: body
        name: hidden
        required: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch_bucket_ordering.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_documentation_patch_bucket_ordering.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_documentation_patch_bucket_ordering.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch_bucket_ordering.json
      summary: Change hidden status for a Kanban project.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/projects/{id_project}/starred:
    description: ''
    get:
      deprecated: false
      description: Get single kanban project starred status.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_documentation_get_project_starred_status.json'
                    type: string
                type: object
          description: GET_200_documentation_get_project_starred_status.json
      summary: Get single kanban project starred status.
      tags:
      - kanban
    parameters:
    - description: ID of a project
      in: path
      name: id_project
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Change starred status for a Kanban project.
      parameters:
      - description: Starred property of Kanban Project
        in: body
        name: starred
        required: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch_project_starred_status.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_documentation_patch_project_starred_status.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_documentation_patch_project_starred_status.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch_project_starred_status.json
      summary: Change starred status for a Kanban project.
      tags:
      - kanban
    summary: summary
  /api/v3/kanban/projects/{id}:
    delete:
      deprecated: false
      description: Deactivate single kanban project.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/DELETE_200_delete_single_project_create_json_documentation.json'
                    type: string
                type: object
          description: DELETE_200_delete_single_project_create_json_documentation.json
      summary: Deactivate single kanban project.
      tags:
      - kanban
    description: ''
    get:
      deprecated: false
      description: Get single kanban project created by user.
      parameters:
      - description: CSV fields. If nothing provided all fields will be returned
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - name
            - order
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/GET_200_get_single_project_create_json_documentation.json'
                    type: string
                type: object
          description: GET_200_get_single_project_create_json_documentation.json
      summary: Get single kanban project created by user.
      tags:
      - kanban
    parameters:
    - description: Id of a project
      in: path
      name: id
      required: true
      schema:
        format: uuid
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch a project for Kanban.
      parameters:
      - description: name of the project
        in: body
        name: name
        required: false
        schema:
          default: null
          type: string
      - description: Optional parameter. If return_whole_object=true, response will
          include tablefields, if return_whole_object=false response will have a list
          of updated fields
        in: body
        name: return_whole_object
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_patch_single_project_create_json_documentation.request_body.json
                  type: string
              type: object
        description: '@kanban/PATCH_200_patch_single_project_create_json_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/kanban/PATCH_200_patch_single_project_create_json_documentation.json'
                    type: string
                type: object
          description: PATCH_200_patch_single_project_create_json_documentation.json
      summary: Patch a project for Kanban.
      tags:
      - kanban
    summary: summary
  /api/v3/notifications/:
    description: ''
    get:
      deprecated: false
      description: Get notifications
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          type: string
      - description: Language of response
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - sender
            - receiver
            - message
            - data
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: -created
          enum:
          - created
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/notifications/GET_200_documentation_get_notifications.json'
                    type: string
                type: object
          description: GET_200_documentation_get_notifications.json
      summary: Get notifications
      tags:
      - notifications
    parameters: []
    post:
      deprecated: false
      description: Post notification TODO
      parameters:
      - description: Sender ID
        in: body
        name: sender
        required: true
        schema:
          format: uuid
          type: string
      - description: Receiver ID
        in: body
        name: receiver
        required: true
        schema:
          format: uuid
          type: string
      - description: Message
        in: body
        name: message
        required: false
        schema:
          default: null
          type: string
      - description: '?'
        in: body
        name: data
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: '?'
        in: body
        name: instance
        required: false
        schema:
          default: null
          type: string
      - description: '?'
        in: body
        name: id_instance
        required: false
        schema:
          default: null
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_notification.request_body.json
                  type: string
              type: object
        description: '@notifications/POST_200_documentation_post_notification.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/notifications/POST_200_documentation_post_notification.json'
                    type: string
                type: object
          description: POST_200_documentation_post_notification.json
      summary: Post notification TODO
      tags:
      - notifications
    summary: summary
  /api/v3/notifications/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/notifications/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - notifications
    parameters: []
    summary: summary
  /api/v3/pdf_generator/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  service:
                    example: absences
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - pdf_generator
    parameters: []
    summary: summary
  /api/v3/pdf_generator/lookups:
    description: ''
    get:
      deprecated: false
      description: Get lookups
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/absences/GET_200_documentation_get_lookups.json'
                    type: string
                type: object
          description: GET_200_documentation_get_lookups.json
      summary: Get lookups
      tags:
      - pdf_generator
    parameters: []
    summary: summary
  /api/v3/pdf_generator/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post lookup
      parameters:
      - description: Lookup
        in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound GET_200_documentation_post_lookup.request_body.json
                  type: string
              type: object
        description: '@lookups/GET_200_documentation_post_lookup.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/lookups/GET_200_documentation_post_lookup..json'
                    type: string
                type: object
          description: GET_200_documentation_post_lookup..json
      summary: Post lookup
      tags:
      - pdf_generator
    summary: summary
  /api/v3/pdf_generator/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: Get lookups from table
      parameters:
      - description: ''
        in: query
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - description: ''
        in: query
        name: index_by
        required: false
        schema:
          default: id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/absences/GET_200_documentation_get_lookups_from_table.json'
                    type: string
                type: object
          description: GET_200_documentation_get_lookups_from_table.json
      summary: Get lookups from table
      tags:
      - pdf_generator
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/pdf_generator/{id_type}/{id_instance}:
    description: ''
    get:
      deprecated: false
      description: Get PDF instance
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/absences/GET_200_documentation_get_pdf_instance.json'
                    type: string
                type: object
          description: GET_200_documentation_get_pdf_instance.json
      summary: Get PDF instance
      tags:
      - pdf_generator
    parameters:
    - in: path
      name: id_type
      required: true
      schema:
        type: string
      type: string
    - in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/pdf_sign/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/pdf_sign/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - pdf_sign
    parameters: []
    summary: summary
  /api/v3/pdf_sign/{document_type_code}/{instance}/{id_instance}:
    description: ''
    parameters:
    - in: path
      name: document_type_code
      required: true
      schema:
        type: string
      type: string
    - in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    - in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post lookup
      parameters:
      - description: Lookup
        in: body
        name: lookups
      - in: body
        name: svg_signature
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound GET_200_documentation_post_lookup.request_body.json
                  type: string
              type: object
        description: '@lookups/GET_200_documentation_post_lookup.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/lookups/GET_200_documentation_post_lookup..json'
                    type: string
                type: object
          description: GET_200_documentation_post_lookup..json
      summary: Post lookup
      tags:
      - pdf_sign
    summary: summary
  /api/v3/plintron_mock/about:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    parameters: []
    summary: summary
  /api/v3/plintron_mock/cancel-bundle:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/deactivate-subscriber:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/get-account-details:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/get-bundle-details:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/get-bundle-free-usage:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/get-bundle-list:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/init-sims:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: first_icc
        required: true
        schema:
          type: string
      - in: query
        name: first_tel_number
        required: true
        schema:
          type: string
      - in: query
        name: number_of_sim_cards
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    parameters: []
    summary: summary
  /api/v3/plintron_mock/italy-register-subscriber:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/modify-balance:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/modify-sims:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_id
        required: true
        schema:
          type: string
      - in: body
        name: property_name
        required: true
        schema:
          type: string
      - in: body
        name: propery_value
        required: true
        schema:
          type: string
      - in: body
        name: number_of_sim_cards
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/reactivate-subscriber:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/plintron_mock/subscribe-bundle:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - plintron_mock
    summary: summary
  /api/v3/remote_logger/:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - description: ''
        in: query
        name: id
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - description: ''
        in: query
        name: logger_name
        required: false
        schema:
          default: null
          type: string
      - description: ''
        in: query
        name: log_level
        required: false
        schema:
          default: null
          type: string
      - description: ''
        in: query
        name: from_date_time
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - description: ''
        in: query
        name: to_date_time
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - description: ''
        in: query
        name: fields
        required: false
        schema:
          default: id,logger_name,log_level,created,data
          enum:
          - created
          - logger_name
          - log_level
          - data
          type: string
      - description: ''
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: boolean
      - description: ''
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
      - description: ''
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int64
          type: integer
      - description: ''
        in: query
        name: order_by
        required: false
        schema:
          default: created
          type: string
      - description: ''
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: ''
        in: query
        name: api_key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/remote_logger/GET_200_create_response.json'
                    type: string
                type: object
          description: GET_200_create_response.json
      summary: ''
      tags:
      - remote_logger
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - description: json data to log
        in: body
        name: data
        required: true
        schema:
          type: string
      - description: ''
        in: body
        name: logger_name
        required: false
        schema:
          default: default
          type: string
      - description: ''
        in: body
        name: log_level
        required: false
        schema:
          default: info
          enum:
          - info
          - warning
          - error
          - critical
          type: string
      - description: ''
        in: query
        name: api_key
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_create_request.request_body.json
                  type: string
              type: object
        description: '@remote_logger/POST_201_create_request.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/remote_logger/POST_201_create_request.json'
                    type: string
                type: object
          description: POST_201_create_request.json
      summary: ''
      tags:
      - remote_logger
    summary: summary
  /api/v3/remote_logger/about:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - remote_logger
    parameters: []
    summary: summary
  /api/v3/remote_logger/api_key:
    description: ''
    get:
      deprecated: false
      description: Returns API_KEY for using remote logger.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  api_key:
                    example: '123'
                    type: string
                type: object
          description: ''
      summary: Returns API_KEY for using remote logger.
      tags:
      - remote_logger
    parameters: []
    summary: summary
  /api/v3/sendmail/about:
    description: Get about information
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - sendmail
    parameters: []
    summary: summary
  /api/v3/sendmail/enqueue:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Enqueue mail TODO requestbody
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_enqueue_mail.request_body.json
                  type: string
              type: object
        description: '@sendmail/POST_201_documentation_post_enqueue_mail.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sendmail/POST_201_documentation_post_enqueue_mail.json'
                    type: string
                type: object
          description: POST_201_documentation_post_enqueue_mail.json
      summary: Enqueue mail TODO requestbody
      tags:
      - sendmail
    summary: summary
  /api/v3/sendmail/send:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post send mail TODO requestbody
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_send_mail.request_body.json
                  type: string
              type: object
        description: '@sendmail/POST_200_documentation_post_send_mail.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sendmail/POST_200_documentation_post_send_mail.json'
                    type: string
                type: object
          description: POST_200_documentation_post_send_mail.json
      summary: Post send mail TODO requestbody
      tags:
      - sendmail
    summary: summary
  /api/v3/sendmail/tests/last-enqueued:
    description: ''
    get:
      deprecated: false
      description: Get last enqueued mail
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sendmail/GET_200_documentation_get_last_enqueued_mail.json'
                    type: string
                type: object
          description: GET_200_documentation_get_last_enqueued_mail.json
      summary: Get last enqueued mail
      tags:
      - sendmail
    parameters: []
    summary: summary
  /api/v3/sendmail/{id_item}/send:
    description: ''
    parameters:
    - description: Item ID
      in: path
      name: id_item
      required: true
      schema:
        type: string
    post:
      deprecated: false
      description: Post send specific email TODO requestbody
      parameters:
      - description: Email ID
        in: body
        name: id_email
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_send_specific_mail.request_body.json
                  type: string
              type: object
        description: '@sendmail/POST_200_documentation_post_send_specific_mail.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sendmail/POST_200_documentation_post_send_specific_mail.json'
                    type: string
                type: object
          description: POST_200_documentation_post_send_specific_mail.json
      summary: Post send specific email TODO requestbody
      tags:
      - sendmail
    summary: summary
  /api/v3/services/--devel--/import-csv-bundles:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: csv_content_base64_encoded
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/--devel--/import-csv-mobile-template_items:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: csv_content_base64_encoded
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/--devel--/import-sim-cards:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: csv_content_base64_encoded
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/--devel--/m2m-wip:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    parameters: []
    summary: summary
  /api/v3/services/about:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    parameters: []
    summary: summary
  /api/v3/services/default-fields/{table}:
    description: ''
    get:
      deprecated: false
      description: Get users default settings for specific table.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sla/GET_200_default_settings_documentation.json'
                    type: string
                type: object
          description: GET_200_default_settings_documentation.json
      summary: Get users default settings for specific table.
      tags:
      - services
    parameters:
    - description: table name for user setting. sla_applied table is most often used
      in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/services/lookups:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: format
        required: false
        schema:
          default: default
          type: string
      - in: query
        name: lang
        required: false
        schema:
          default: default
          type: string
      - in: query
        name: format_frontend_key
        required: false
        schema:
          default: code
          type: string
      - in: query
        name: frontend_format
        required: false
        schema:
          default: list
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    parameters: []
    summary: summary
  /api/v3/services/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - in: query
        name: index_by
        required: false
        schema:
          default: id
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/services/mobile/sim/service_type_item:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: name
        required: true
        schema:
          type: string
      - in: body
        name: main_plintron_code_and_id
        required: true
        schema:
          type: string
      - in: body
        name: monthly_price_without_vat
        required: true
        schema:
          format: float64
          type: number
      - in: body
        name: annual_price_without_vat
        required: true
        schema:
          format: float64
          type: number
      - in: body
        name: annual_price
        required: true
        schema:
          format: float64
          type: number
      - in: body
        name: monthly_price
        required: true
        schema:
          format: float64
          type: number
      - in: body
        name: additional_plintron_bundles
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/get_account_details:
    description: ''
    parameters: []
    post:
      deprecated: true
      description: ''
      parameters:
      - description: ''
        in: body
        name: icc_ids
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/get_bundle_free_usage:
    description: ''
    parameters: []
    post:
      deprecated: true
      description: ''
      parameters:
      - description: ''
        in: body
        name: icc_ids
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/get_bundle_list:
    description: ''
    parameters: []
    post:
      deprecated: true
      description: ''
      parameters:
      - description: ''
        in: body
        name: icc_ids
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron:
    description: ''
    get:
      deprecated: false
      description: Returns list of methods currently implemented in Plintron client
      responses:
        '418':
          description: Responses were not documented.
      summary: Returns list of methods currently implemented in Plintron client
      tags:
      - services
    parameters: []
    summary: summary
  /api/v3/services/sim/plintron/cancel_bundle:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_id
        required: true
        schema:
          type: string
      - in: body
        name: bundle_code
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/cancel_bundles:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_ids
        required: true
        schema:
          items:
            type: string
          type: array
      - in: body
        name: bundle_codes
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/deactivate_subscriber:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_ids
        required: true
        schema:
          items:
            type: string
          type: array
      - in: body
        name: reason_desc
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/generic/{method}:
    description: ''
    parameters:
    - description: lowercase method name from Plintron API.
      in: path
      name: method
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Generic method to call Plintron API.
      parameters:
      - description: Arguments for Plinton API method. Recommended to use dict generated
          from plintron types models
        in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: Generic method to call Plintron API.
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/get_account_details:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - description: ''
        in: body
        name: icc_ids
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/get_bundle_free_usage:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - description: ''
        in: body
        name: icc_ids
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/get_bundle_list:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - description: ''
        in: body
        name: icc_ids
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/get_subscriber_details:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_id
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/get_subscribers_bundle_codes:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_id
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/modify_balance:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_ids
        required: true
        schema:
          items:
            type: string
          type: array
      - in: body
        name: amount
        required: true
        schema:
          format: float64
          type: number
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/reactivate_subscriber:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_ids
        required: true
        schema:
          items:
            type: string
          type: array
      - in: body
        name: reason_desc
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/register_subscriber:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: request
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/subscribe_bundle:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_id
        required: true
        schema:
          type: string
      - in: body
        name: bundle_code
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/sim/plintron/subscribe_bundles:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: icc_ids
        required: true
        schema:
          items:
            type: string
          type: array
      - in: body
        name: bundle_codes
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/service-template-items:
    description: ''
    get:
      deprecated: false
      description: Get all valid service templates items which are basically Plintron
        bundles.
      parameters:
      - description: CSV fields. If nothing provided all fields will be returned
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - data_amount_gb
            - voice_call_minutes
            - sms_number
            - roaming_minutes
            - roaming_sms_number
            - roaming_data_r
            - roaming_data_u
            - code
            - name
            - service_template_id
            type: string
          type: array
      - description: Pagination. Pagination is turned on by the default
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: boolean
      - description: pagination page. By default, it is 1
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: per page parameter. By default, it is 30
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          format: int64
          type: integer
      - in: query
        name: force_limit
        required: false
        schema:
          default: 50
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/GET_200_get_service_template_items_documentation.json'
                    type: string
                type: object
          description: GET_200_get_service_template_items_documentation.json
      summary: Get all valid service templates items which are basically Plintron
        bundles.
      tags:
      - services
    parameters:
    - description: Service group code, connectivity, mobile at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/service-templates:
    description: ''
    get:
      deprecated: false
      description: Get all valid service templates.
      parameters:
      - description: CSV fields. If nothing provided all fields will be returned
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - data_amount_gb
            - voice_call_minutes
            - sms_number
            - roaming_minutes
            - roaming_sms_number
            - roaming_data_r
            - roaming_data_u
            - code
            - name
            - service_template_id
            type: string
          type: array
      - description: Pagination. Pagination is turned on by the default
        in: query
        name: no_paginate
        required: false
        schema:
          default: false
          type: boolean
      - description: pagination page. By default, it is 1
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: per page parameter. By default, it is 30
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          format: int64
          type: integer
      - description: By default it is True
        in: query
        name: include_columns_in_response
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/GET_200_get_bundles_documentation.json'
                    type: string
                type: object
          description: GET_200_get_bundles_documentation.json
      summary: Get all valid service templates.
      tags:
      - services
    parameters:
    - description: Service group code, connectivity, mobile at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/service-templates/deactivate:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Bulk patch method for deactivating one or more service templates.
      parameters:
      - description: list od ids of sim cards
        in: body
        name: mobile_service_sims
      - description: company site id
        in: body
        name: company_site_id
      - description: list of service template ids
        in: body
        name: service_template_id_list
        required: true
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        description: '@services/'
      responses:
        '418':
          description: Responses were not documented.
      summary: Bulk patch method for deactivating one or more service templates.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services:
    description: ''
    get:
      deprecated: false
      description: Get all information about services for sim cards.
      parameters:
      - description: CSV fields. If nothing provided all fields will be returned
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - data_amount_gb
            - voice_call_minutes
            - sms_number
            - roaming_minutes
            - roaming_sms_number
            - roaming_data_r
            - roaming_data_u
            - code
            - name
            - service_template_id
            type: string
          type: array
      - description: Pagination. Pagination is turned on by the default
        in: query
        name: no_paginate
        required: false
        schema:
          default: false
          type: boolean
      - description: pagination page. By default, it is 1
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: per page parameter. By default, it is 50
        in: query
        name: per_page
        required: false
        schema:
          default: 50
          format: int64
          type: integer
      - description: By default it is True
        in: query
        name: include_columns_in_response
        required: false
        schema:
          default: true
          type: boolean
      - description: query filters. They are defined in the allowed filtering list
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - in: query
        name: order_by
        required: false
        schema:
          default: -created
          type: string
      - in: query
        name: force_limit
        required: false
        schema:
          default: null
          format: int64
          type: integer
      - in: query
        name: include_menus_in_response
        required: false
        schema:
          default: true
          type: boolean
      - in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/GET_200_get_all_sim_cards_documentation.json'
                    type: string
                type: object
          description: GET_200_get_all_sim_cards_documentation.json
      summary: Get all information about services for sim cards.
      tags:
      - services
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/activate:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch method for toggle activation of one sim card assigned to
        a customer and registered to a user.
      parameters:
      - description: id of a service entity, for example, mobile sim id
        in: body
        name: id_service_entity
        required: true
        schema:
          format: uuid
          type: string
      - description: block is a boolean, True if We want to block sim cards, False
          if We want to unblock them
        in: body
        name: block
      - description: note, not mandatory
        in: body
        name: note
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_block_sim_card_documentation.request_body.json
                  type: string
              type: object
        description: '@services/PATCH_200_block_sim_card_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/PATCH_200_block_sim_card_documentation.json'
                    type: string
                type: object
          description: PATCH_200_block_sim_card_documentation.json
      summary: Patch method for toggle activation of one sim card assigned to a customer
        and registered to a user.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/add_template:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Bulk patch method for adding templates on more than one sim card.
      parameters:
      - description: list od ids of sim cards
        in: body
        name: mobile_service_sims
        required: true
        schema:
          items:
            type: string
          type: array
      - description: service template id
        in: body
        name: service_template_id
        required: false
        schema:
          default: null
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        description: '@services/'
      responses:
        '418':
          description: Responses were not documented.
      summary: Bulk patch method for adding templates on more than one sim card.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/assign:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Bulk patch method for assigning more than one sim card to a customer.
      parameters:
      - description: list od ids of sim cards
        in: body
        name: mobile_service_sims
        required: true
        schema:
          items:
            type: string
          type: array
      - description: company site id
        in: body
        name: company_site_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_assign_sims_to_a_company_documentation.request_body.json
                  type: string
              type: object
        description: '@services/PATCH_200_assign_sims_to_a_company_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/PATCH_200_assign_sims_to_a_company_documentation.json'
                    type: string
                type: object
          description: PATCH_200_assign_sims_to_a_company_documentation.json
      summary: Bulk patch method for assigning more than one sim card to a customer.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/block:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Bulk patch method for blocking more than one sim card assigned
        to a customer.
      parameters:
      - description: list od ids of sim cards
        in: body
        name: mobile_service_sims
        required: true
        schema:
          items:
            type: string
          type: array
      - description: block is a boolean, True if We want to block sim cards, False
          if We want to unblock them
        in: body
        name: block
        required: true
        schema:
          type: boolean
      - description: note, not mandatory
        in: body
        name: note
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_assign_sims_to_a_company_and_bulk_block_and_unblock_sims_documentation.request_body.json
                  type: string
              type: object
        description: '@services/PATCH_200_assign_sims_to_a_company_and_bulk_block_and_unblock_sims_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/PATCH_200_assign_sims_to_a_company_and_bulk_block_and_unblock_sims_documentation.json'
                    type: string
                type: object
          description: PATCH_200_assign_sims_to_a_company_and_bulk_block_and_unblock_sims_documentation.json
      summary: Bulk patch method for blocking more than one sim card assigned to a
        customer.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/cancel:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Bulk patch method for cancelling sim card.
      parameters:
      - description: list of mobile sim ids
        in: body
        name: mobile_service_sims
        required: true
        schema:
          items:
            type: string
          type: array
      - in: body
        name: note
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        description: '@services/'
      responses:
        '418':
          description: Responses were not documented.
      summary: Bulk patch method for cancelling sim card.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/change_template:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Bulk patch method for changing templates on more than one sim card.
      parameters:
      - description: list od ids of sim cards
        in: body
        name: mobile_service_sims
        required: true
        schema:
          items:
            type: string
          type: array
      - description: service template id
        in: body
        name: service_template_id
        required: false
        schema:
          default: null
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        description: '@services/'
      responses:
        '418':
          description: Responses were not documented.
      summary: Bulk patch method for changing templates on more than one sim card.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/multi_selected_menu:
    description: ''
    get:
      deprecated: false
      description: Get information about bulk action menu for services on sim cards.
      parameters:
      - description: list of sim card ids
        in: query
        name: sim_list
      - in: query
        name: sims
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: Get information about bulk action menu for services on sim cards.
      tags:
      - services
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/topup:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Bulk patch method for topup on one or more sim cards.
      parameters:
      - description: list od ids of sim cards
        in: body
        name: mobile_service_sims
        required: true
        schema:
          items:
            type: string
          type: array
      - in: body
        name: amount
        required: true
        schema:
          format: float64
          type: number
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
        description: '@services/'
      responses:
        '418':
          description: Responses were not documented.
      summary: Bulk patch method for topup on one or more sim cards.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/update-bundle-info:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch method for cancelling one sim card assigned to a customer.
      parameters:
      - description: data gathered from plintron used for updating sim card services
        in: body
        name: plintron_free_usage_data
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      - in: body
        name: plintron_account_info_data
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_add_template_to_assigned_sim_cards_documentation.request_body.json
                  type: string
              type: object
        description: '@services/PATCH_200_add_template_to_assigned_sim_cards_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/PATCH_200_add_template_to_assigned_sim_cards_documentation.json'
                    type: string
                type: object
          description: PATCH_200_add_template_to_assigned_sim_cards_documentation.json
      summary: Patch method for cancelling one sim card assigned to a customer.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/{id_service_entity}/:
    description: ''
    get:
      deprecated: false
      description: Get method for getting all necessary information about one sim
        card
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/GET_200_get_data_for_the_specific_sim_card_documentation.json'
                    type: string
                type: object
          description: GET_200_get_data_for_the_specific_sim_card_documentation.json
      summary: Get method for getting all  necessary information about one sim card
      tags:
      - services
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service entity id, mobile sim card id for example
      in: path
      name: id_service_entity
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/{id_service_entity}/block:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service entity id, mobile sim card id for example
      in: path
      name: id_service_entity
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch method for blocking one sim card assigned to a customer.
      parameters:
      - description: block is a boolean, True if We want to block sim cards, False
          if We want to unblock them
        in: body
        name: block
        required: true
        schema:
          type: boolean
      - description: note, not mandatory
        in: body
        name: note
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_block_sim_card_documentation.request_body.json
                  type: string
              type: object
        description: '@services/PATCH_200_block_sim_card_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/PATCH_200_block_sim_card_documentation.json'
                    type: string
                type: object
          description: PATCH_200_block_sim_card_documentation.json
      summary: Patch method for blocking one sim card assigned to a customer.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/{id_service_entity}/cancel:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service entity id, mobile sim card id for example
      in: path
      name: id_service_entity
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch method for cancelling one sim card assigned to a customer.
      parameters:
      - description: block is a boolean, True if We want to block sim cards, False
          if We want to unblock them
        in: body
        name: block
      - description: note, not mandatory
        in: body
        name: note
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_cancel_sim_card_documentation.request_body.json
                  type: string
              type: object
        description: '@services/PATCH_200_cancel_sim_card_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/PATCH_200_cancel_sim_card_documentation.json'
                    type: string
                type: object
          description: PATCH_200_cancel_sim_card_documentation.json
      summary: Patch method for cancelling one sim card assigned to a customer.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/{id_service_entity}/flow_header:
    description: ''
    get:
      deprecated: false
      description: Get method for flow header data for one sim card
      parameters:
      - in: query
        name: fields
        required: false
        schema:
          default: null
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: Get method for flow header data for one sim card
      tags:
      - services
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service entity id, mobile sim card id for example
      in: path
      name: id_service_entity
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/{id_service_entity}/register:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - services
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service entity id, mobile sim card id for example
      in: path
      name: id_service_entity
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch method for registering a subscriber to a specific service
        entity.
      parameters:
      - description: start date of a contract
        in: body
        name: start_date
      - description: contract duration in days
        in: body
        name: contract_duration_in_days
      - description: id of a subscriber
        in: body
        name: id_subscriber
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - in: body
        name: id_company_site
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: preferred_language
        required: true
        schema:
          type: string
      - in: body
        name: title_id
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: last_name
        required: true
        schema:
          type: string
      - in: body
        name: first_name
        required: true
        schema:
          type: string
      - in: body
        name: gender_id
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: date_of_birth
        required: true
        schema:
          format: date-time
          type: string
      - in: body
        name: place_of_birth
        required: true
        schema:
          type: string
      - in: body
        name: house_number
        required: true
        schema:
          type: string
      - in: body
        name: house_name
        required: true
        schema:
          type: string
      - in: body
        name: post_code
        required: true
        schema:
          type: string
      - in: body
        name: street
        required: true
        schema:
          type: string
      - in: body
        name: city_id
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: email
        required: true
        schema:
          type: string
      - in: body
        name: residence_country_id
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: nationality_id
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: tax_code
        required: true
        schema:
          type: string
      - in: body
        name: document_number
        required: true
        schema:
          type: string
      - in: body
        name: issuer
        required: true
        schema:
          type: string
      - in: body
        name: date_of_issue
        required: true
        schema:
          format: date-time
          type: string
      - in: body
        name: valid_till
        required: true
        schema:
          format: date-time
          type: string
      - in: body
        name: attachments
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      - in: body
        name: chk_sms_marketing
        required: true
        schema:
          type: boolean
      - in: body
        name: chk_terms
        required: true
        schema:
          type: boolean
      - in: body
        name: chk_photocopy
        required: true
        schema:
          type: boolean
      - in: body
        name: chk_age
        required: true
        schema:
          type: boolean
      - in: body
        name: sms_update
        required: true
        schema:
          type: boolean
      - in: body
        name: dynamic_allocation_status
        required: true
        schema:
          format: int64
          type: integer
      - in: body
        name: ivrlanguage
        required: true
        schema:
          type: string
      - in: body
        name: service_template_id
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - in: body
        name: alternative_contact_number
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_register_subscriber_documentation.request_body.json
                  type: string
              type: object
        description: '@services/PATCH_200_register_subscriber_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/PATCH_200_register_subscriber_documentation.json'
                    type: string
                type: object
          description: PATCH_200_register_subscriber_documentation.json
      summary: Patch method for registering a subscriber to a specific service entity.
      tags:
      - services
    summary: summary
  /api/v3/services/{group_lcode}/{type_lcode}/services/{id_service_entity}/register_mock:
    description: ''
    parameters:
    - description: Service group code, connectivity, mobile available at the moment
      in: path
      name: group_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service type, sim available for now
      in: path
      name: type_lcode
      required: true
      schema:
        type: string
      type: string
    - description: Service entity id, mobile sim card id for example
      in: path
      name: id_service_entity
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch method for Mock registering a subscriber to a specific service
        entity used only for testing purpose.
      parameters:
      - description: start date of a contract
        in: body
        name: start_date
        required: true
        schema:
          format: date-time
          type: string
      - description: contract duration in days
        in: body
        name: contract_duration_in_days
        required: true
        schema:
          format: int64
          type: integer
      - description: id of a subscriber
        in: body
        name: id_subscriber
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - in: body
        name: subscriber_data
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - in: body
        name: note
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_register_subscriber_documentation.request_body.json
                  type: string
              type: object
        description: '@services/PATCH_200_register_subscriber_documentation.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/services/PATCH_200_register_subscriber_documentation.json'
                    type: string
                type: object
          description: PATCH_200_register_subscriber_documentation.json
      summary: Patch method for Mock registering a subscriber to a specific service
        entity used only for testing purpose.
      tags:
      - services
    summary: summary
  /api/v3/sla/:
    description: ''
    get:
      deprecated: false
      description: Get all applied SLAs TODO parameters
      parameters:
      - description: current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          format: int64
          type: integer
      - description: general search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - status_id
            - id_site
            - sla_group_id
            - sla_main_id
            - sla_c_additional
            - sla_c_business_components
            - customer_number
            - customer_name
            - customer_site_number
            - customer_site_name
            - customer_site_address
            - existing_maintenance_contract
            - credit_note_on_existing_maintenance_contract
            - date_of_first_invoice
            - contract_duration_in_days
            - end_of_contract
            - auto_renew
            - next_renewal_date
            - billing_period_id
            - note
            - created
            - created_by_display_name
            - last_updated
            - last_updated_by_display_name
            type: string
          type: array
      - description: ''
        in: query
        name: order_by
        required: false
        schema:
          default: created
          enum:
          - customer_name
          - customer_number
          - customer_site_name
          - customer_site_number
          - status_id
          - sla_group_id
          - sla_main_id
          - existing_maintenance_contract
          - credit_note_on_existing_maintenance_contract
          - last_updated_by_display_name
          - last_updated
          - created
          - created_by_display_name
          - auto_renew
          - next_renewal_date
          - end_of_contract
          - contract_duration_in_days
          - date_of_first_invoice
          type: string
      - description: If true, pagination will not be provided. By default, it is Trueinclude_columns_in_response
          TODO sla_additional_contains_all sla_additional_contains_one_of sla_additional_contains_one_of__in
          business_components_contains_one_of business_components_contains_one_of__in
          business_components_contains_all
        in: query
        name: no_paginate
        required: false
        schema:
          default: false
          type: boolean
      - in: query
        name: include_columns_in_response
        required: false
        schema:
          default: true
          type: boolean
      - in: query
        name: sla_additional_contains_all
        required: false
        schema:
          default: null
          type: string
      - in: query
        name: sla_additional_contains_one_of
        required: false
        schema:
          default: null
          type: string
      - in: query
        name: sla_additional_contains_one_of__in
        required: false
        schema:
          default: null
          type: string
      - in: query
        name: business_components_contains_one_of
        required: false
        schema:
          default: null
          type: string
      - in: query
        name: business_components_contains_one_of__in
        required: false
        schema:
          default: null
          type: string
      - in: query
        name: business_components_contains_all
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sla/GET_200_get_sla.json'
                    type: string
                type: object
          description: GET_200_get_sla.json
      summary: Get all applied SLAs TODO parameters
      tags:
      - sla
    parameters: []
    summary: summary
  /api/v3/sla/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sla/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - sla
    parameters: []
    summary: summary
  /api/v3/sla/apply:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post apply SLA TODO
      parameters:
      - description: ''
        in: body
        name: id_customer
        required: true
        schema:
          format: uuid
          type: string
      - description: ''
        in: body
        name: id_site
        required: true
        schema:
          format: uuid
          type: string
      - description: ''
        in: body
        name: sla_group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: ''
        in: body
        name: sla_main_id
        required: true
        schema:
          format: uuid
          type: string
      - description: ''
        in: body
        name: sla_additional
        required: false
        schema:
          default: null
          items:
            type: string
          type: array
      - description: ''
        in: body
        name: sla_business_components_quantity_and_price
        required: false
        schema:
          default: null
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_sla_apply.request_body.json
                  type: string
              type: object
        description: '@sla/POST_201_documentation_post_sla_apply.request_body.json'
      responses:
        '418':
          description: Responses were not documented.
      summary: Post apply SLA TODO
      tags:
      - sla
    summary: summary
  /api/v3/sla/cache/invalidate/{table}:
    description: ''
    parameters:
    - description: Table name for user cache invalidation. sla_applied table is most
        often used
      in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Invalidate cache table
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: Invalidate cache table
      tags:
      - sla
    summary: summary
  /api/v3/sla/default-fields/{table}:
    description: ''
    get:
      deprecated: false
      description: Get users default settings for specific table.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sla/GET_200_documentation_get_users_default_fields.json'
                    type: string
                type: object
          description: GET_200_documentation_get_users_default_fields.json
      summary: Get users default settings for specific table.
      tags:
      - sla
    parameters:
    - description: Table name for user setting. sla_applied table is most often used
      in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/sla/lookups:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: format
        required: false
        schema:
          default: default
          type: string
      - in: query
        name: lang
        required: false
        schema:
          default: default
          type: string
      - in: query
        name: format_frontend_key
        required: false
        schema:
          default: code
          type: string
      - in: query
        name: frontend_format
        required: false
        schema:
          default: list
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - sla
    parameters: []
    summary: summary
  /api/v3/sla/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - sla
    summary: summary
  /api/v3/sla/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - in: query
        name: index_by
        required: false
        schema:
          default: id
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - sla
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/sla/test_lookup:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - sla
    parameters: []
    summary: summary
  /api/v3/sla/upload:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Upload XLSM file with SLA data
      parameters:
      - description: name of the XLSM file
        in: body
        name: filename
        required: true
        schema:
          type: string
      - description: TODO
        in: body
        name: bse64encoded
        required: true
        schema:
          type: string
      - description: ''
        in: body
        name: return_mock_for_testing
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_upload.request_body.json
                  type: string
              type: object
        description: '@sla/POST_200_documentation_post_upload.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sla/POST_200_documentation_post_upload..json'
                    type: string
                type: object
          description: POST_200_documentation_post_upload..json
      summary: Upload XLSM file with SLA data
      tags:
      - sla
    summary: summary
  /api/v3/sla/upload-mock:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: data
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - sla
    summary: summary
  /api/v3/sla/{id}:
    delete:
      deprecated: false
      description: Delete single SLA TODO
      parameters: []
      responses:
        '204':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/DELETE_204_documentation_delete.json'
                    type: string
                type: object
          description: DELETE_204_documentation_delete.json
      summary: Delete single SLA TODO
      tags:
      - sla
    description: ''
    get:
      deprecated: false
      description: Get single SLA created by user. TODO
      parameters:
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - status_id
            - id_site
            - sla_group_id
            - sla_main_id
            - sla_c_additional
            - sla_c_business_components
            - customer_number
            - customer_name
            - customer_site_number
            - customer_site_name
            - customer_site_address
            - existing_maintenance_contract
            - credit_note_on_existing_maintenance_contract
            - date_of_first_invoice
            - contract_duration_in_days
            - end_of_contract
            - auto_renew
            - next_renewal_date
            - billing_period_id
            - note
            - created
            - created_by_display_name
            - last_updated
            - last_updated_by_display_name
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sla/GET_200_get_single_sla_documentation.json'
                    type: string
                type: object
          description: GET_200_get_single_sla_documentation.json
      summary: Get single SLA created by user. TODO
      tags:
      - sla
    parameters:
    - description: Id of a single SLA
      in: path
      name: id
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/sla/{id}/header:
    description: ''
    get:
      deprecated: false
      description: Get single SLA header data
      parameters:
      - description: CSV string of fields (by default it is id,uid,id_customer,id_site,customer_number,customer_name,customer_site_number,customer_site_name)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: id,uid,id_customer,id_site,customer_number,customer_name,customer_site_number,customer_site_name
            enum:
            - id
            - uid
            - status_id
            - id_site
            - sla_group_id
            - sla_main_id
            - sla_c_additional
            - sla_c_business_components
            - customer_number
            - customer_name
            - customer_site_number
            - customer_site_name
            - customer_site_address
            - existing_maintenance_contract
            - credit_note_on_existing_maintenance_contract
            - date_of_first_invoice
            - contract_duration_in_days
            - end_of_contract
            - auto_renew
            - next_renewal_date
            - billing_period_id
            - note
            - created
            - created_by_display_name
            - last_updated
            - last_updated_by_display_name
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sla/GET_200_get_single_sla_for_header_documentation.json'
                    type: string
                type: object
          description: GET_200_get_single_sla_for_header_documentation.json
      summary: Get single SLA header data
      tags:
      - sla
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/sms/about:
    description: ''
    get:
      deprecated: false
      description: Get about information.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sms/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information.
      tags:
      - sms
    parameters: []
    summary: summary
  /api/v3/sms/enqueue:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post enqueue SMS message. TODO
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_enqueue_sms.request_body.json
                  type: string
              type: object
        description: '@sms/POST_201_documentation_post_enqueue_sms.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sms/POST_201_documentation_post_enqueue_sms.json'
                    type: string
                type: object
          description: POST_201_documentation_post_enqueue_sms.json
      summary: Post enqueue SMS message. TODO
      tags:
      - sms
    summary: summary
  /api/v3/sms/send:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post send SMS. TODO
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_send_sms.request_body.json
                  type: string
              type: object
        description: '@sms/POST_200_documentation_post_send_sms.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sms/POST_200_documentation_post_send_sms.json'
                    type: string
                type: object
          description: POST_200_documentation_post_send_sms.json
      summary: Post send SMS. TODO
      tags:
      - sms
    summary: summary
  /api/v3/sms/tests/last-enqueued:
    description: ''
    get:
      deprecated: false
      description: Get last enqueued SMS.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sms/GET_200_documentation_get_last_enqueued.json'
                    type: string
                type: object
          description: GET_200_documentation_get_last_enqueued.json
      summary: Get last enqueued SMS.
      tags:
      - sms
    parameters: []
    summary: summary
  /api/v3/sms/{id_sms}/delivery_report:
    description: ''
    parameters:
    - description: Id of SMS
      in: path
      name: id_sms
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post SMS report. TODO
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_delivery_report.request_body.json
                  type: string
              type: object
        description: '@sms/POST_200_documentation_post_delivery_report.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sms/POST_200_documentation_post_delivery_report.json'
                    type: string
                type: object
          description: POST_200_documentation_post_delivery_report.json
      summary: Post SMS report. TODO
      tags:
      - sms
    summary: summary
  /api/v3/sms/{id_sms}/send:
    description: ''
    parameters:
    - description: Id of SMS
      in: path
      name: id_sms
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post send single SMS. TODO
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_send_single_sms.request_body.json
                  type: string
              type: object
        description: '@sms/POST_200_documentation_post_send_single_sms.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/sms/POST_200_documentation_post_send_single_sms.json'
                    type: string
                type: object
          description: POST_200_documentation_post_send_single_sms.json
      summary: Post send single SMS. TODO
      tags:
      - sms
    summary: summary
  /api/v3/teamcalendar/:
    description: ''
    get:
      deprecated: false
      description: Get DUS. TODO , API needs to be finished
      parameters:
      - description: ''
        in: query
        name: start
        required: false
        schema:
          default: null
          format: date
          type: string
      - description: ''
        in: query
        name: end
        required: false
        schema:
          default: null
          format: date
          type: string
      - description: ''
        in: query
        name: year
        required: false
        schema:
          default: null
          format: int64
          type: integer
      - description: ''
        in: query
        name: week
        required: false
        schema:
          default: null
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/teamcalendar/GET_200_documentation_get_dus.json'
                    type: string
                type: object
          description: GET_200_documentation_get_dus.json
      summary: Get DUS. TODO , API needs to be finished
      tags:
      - teamcalendar
    parameters: []
    summary: summary
  /api/v3/teamcalendar/about:
    description: ''
    get:
      deprecated: false
      description: Get about information.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/teamcalendar/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information.
      tags:
      - teamcalendar
    parameters: []
    summary: summary
  /api/v3/teamcalendar/meetings:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: 'Post meeting. # TODO'
      parameters:
      - description: Start date
        in: body
        name: start
        required: true
        schema:
          format: date-time
          type: string
      - description: End date
        in: body
        name: end
        required: true
        schema:
          format: date-time
          type: string
      - description: List of users included for meeting
        in: body
        name: list_of_users
        required: true
        schema:
          items:
            type: string
          type: array
      - description: 'Recurring # TODO , shouldn''t this be enum?'
        in: body
        name: recurring
        required: false
        schema:
          default: null
          type: string
      - description: '# TODO'
        in: body
        name: recurring_to_date
        required: false
        schema:
          default: null
          format: date
          type: string
      - description: '# TODO'
        in: body
        name: recurring_weekdays
        required: false
        schema:
          default: null
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_meeting.request_body.json
                  type: string
              type: object
        description: '@teamcalendar/POST_201_documentation_post_meeting.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/teamcalendar/POST_201_documentation_post_meeting.json'
                    type: string
                type: object
          description: POST_201_documentation_post_meeting.json
      summary: 'Post meeting. # TODO'
      tags:
      - teamcalendar
    summary: summary
  /api/v3/teamcalendar/notes:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post note.
      parameters:
      - description: User ID
        in: body
        name: id_user
        required: true
        schema:
          format: uuid
          type: string
      - description: Start date
        in: body
        name: start
        required: true
        schema:
          format: date-time
          type: string
      - description: End date
        in: body
        name: end
        required: true
        schema:
          format: date-time
          type: string
      - description: Note content
        in: body
        name: content
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_note.request_body.json
                  type: string
              type: object
        description: '@teamcalendar/POST_201_documentation_post_note.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/teamcalendar/POST_201_documentation_post_note.json'
                    type: string
                type: object
          description: POST_201_documentation_post_note.json
      summary: Post note.
      tags:
      - teamcalendar
    summary: summary
  /api/v3/teamcalendar/test-dus:
    description: ''
    get:
      deprecated: false
      description: Get DUS. TODO
      parameters:
      - description: ''
        in: query
        name: dates
        required: true
        schema:
          items:
            type: string
          type: array
      - description: ''
        in: query
        name: users
        required: true
        schema:
          items:
            type: string
          type: array
      - description: ''
        in: query
        name: tickets
        required: false
        schema:
          default: true
          type: boolean
      - description: ''
        in: query
        name: officetimes
        required: false
        schema:
          default: true
          type: boolean
      - description: ''
        in: query
        name: notes
        required: false
        schema:
          default: true
          type: boolean
      - description: ''
        in: query
        name: meetings
        required: false
        schema:
          default: true
          type: boolean
      - description: ''
        in: query
        name: absences
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/teamcalendar/GET_200_documentation_get_dus.json'
                    type: string
                type: object
          description: GET_200_documentation_get_dus.json
      summary: Get DUS. TODO
      tags:
      - teamcalendar
    parameters: []
    summary: summary
  /api/v3/teamcalendar/tickets:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Post ticket.
      parameters:
      - description: Ticket ID
        in: body
        name: id_ticket
        required: true
        schema:
          format: uuid
          type: string
      - description: Start date
        in: body
        name: start
        required: true
        schema:
          format: date-time
          type: string
      - description: End date
        in: body
        name: end
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Users to be included # TODO RequestBody is shown to be just
          "string" instead of user'
        in: body
        name: list_of_users
        required: true
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_204_documentation_post_tickets.request_body.json
                  type: string
              type: object
        description: '@teamcalendar/POST_204_documentation_post_tickets.request_body.json'
      responses:
        '204':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/teamcalendar/POST_204_documentation_post_tickets.json'
                    type: string
                type: object
          description: POST_204_documentation_post_tickets.json
      summary: Post ticket.
      tags:
      - teamcalendar
    summary: summary
  /api/v3/telegram/about:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - telegram
    parameters: []
    summary: summary
  /api/v3/telegram/get_update:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Endpoint for telegram server to send updates to.
      parameters:
      - in: body
        name: update
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: Endpoint for telegram server to send updates to.
      tags:
      - telegram
    summary: summary
  /api/v3/telegram/link:
    description: ''
    get:
      deprecated: false
      description: Links users telegram account with systems account.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  link:
                    example: t.me/name_of_a_bot?start=ABCDEF-DCUBE
                    type: string
                type: object
          description: ''
        '401':
          content:
            application/json:
              schema:
                properties:
                  code:
                    example: 401
                    format: int64
                    type: integer
                  id_message:
                    example: UNAUTHORIZED
                    type: string
                  message:
                    example: Unauthorized
                    type: string
                  method:
                    example: GET
                    type: string
                  uri:
                    example: /api/v3/telegram/link
                    type: string
                type: object
          description: ''
      summary: Links users telegram account with systems account.
      tags:
      - telegram
    parameters: []
    summary: summary
  /api/v3/telegram/send_message/{user_id}:
    description: ''
    parameters:
    - description: users id
      example: 123e4567-e89b-12d3-a456-426614174000
      in: path
      name: user_id
      required: true
      schema:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: uuid
      type: string
    post:
      deprecated: false
      description: Method to send messages via telegram API. User should be registered
        via API/telegram/link.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disable_notification:
                  default: null
                  type: boolean
                disable_web_page_preview:
                  default: null
                  type: boolean
                parse_mode:
                  default: null
                  enum:
                  - MarkdownV2
                  - HTML
                  - Markdown
                  example: MarkdownV2
                  type: string
                protect_content:
                  default: null
                  type: boolean
                reply_markup:
                  properties:
                    inline_keyboard:
                      items:
                        items:
                          properties:
                            text:
                              example: i am a button
                              type: string
                            url:
                              example: https://www.google.com
                              type: string
                          type: object
                        type: array
                      type: array
                  type: object
                text:
                  example: Text of a message
                  type: string
              required:
              - text
              type: object
        description: Supports arguments from sendMessage method of telegram bot API
          (core.telegram.org/bots/api#sendmessage)
      responses:
        '418':
          description: Responses were not documented.
      summary: Method to send messages via telegram API.
      tags:
      - telegram
    summary: summary
  /api/v3/telegram/send_message_to_me:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: Sends message to currently singed in user.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disable_notification:
                  default: null
                  type: boolean
                disable_web_page_preview:
                  default: null
                  type: boolean
                parse_mode:
                  default: null
                  enum:
                  - MarkdownV2
                  - HTML
                  - Markdown
                  example: MarkdownV2
                  type: string
                protect_content:
                  default: null
                  type: boolean
                reply_markup:
                  properties:
                    inline_keyboard:
                      items:
                        items:
                          properties:
                            text:
                              example: i am a button
                              type: string
                            url:
                              example: https://www.google.com
                              type: string
                          type: object
                        type: array
                      type: array
                  type: object
                text:
                  example: Text of a message
                  type: string
              required:
              - text
              type: object
        description: Supports arguments from sendMessage method of telegram bot API
          (core.telegram.org/bots/api#sendmessage)
      responses:
        '418':
          description: Responses were not documented.
      summary: Sends message to currently singed in user.
      tags:
      - telegram
    summary: summary
  /api/v3/tenants/:
    description: ''
    get:
      deprecated: false
      description: Get all tenants
      parameters:
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: id,code,name
            enum:
            - 'Link error: @Tenant.default_fields. ''NoneType'' object is not iterable'
            type: string
          type: array
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: true
          type: boolean
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int64
          type: integer
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: code
          enum:
          - code
          - name
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/GET_200_documentation_get_tenants.json'
                    type: string
                type: object
          description: GET_200_documentation_get_tenants.json
      summary: Get all tenants
      tags:
      - tenants
    parameters: []
    post:
      deprecated: false
      description: Post tenant TODO
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_tenant.request_body.json
                  type: string
              type: object
        description: '@tenants/POST_201_documentation_post_tenant.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/POST_201_documentation_post_tenant.json'
                    type: string
                type: object
          description: POST_201_documentation_post_tenant.json
      summary: Post tenant TODO
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - tenants
    parameters: []
    summary: summary
  /api/v3/tenants/captcha:
    description: ''
    get:
      deprecated: false
      description: Get Captcha
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/GET_200_documentation_get_captcha.json'
                    type: string
                type: object
          description: GET_200_documentation_get_captcha.json
      summary: Get Captcha
      tags:
      - tenants
    parameters: []
    post:
      deprecated: false
      description: 'Post Captcha # TODO'
      parameters:
      - description: '? TODO'
        in: body
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Value
        in: body
        name: value
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_204_documentation_post_captcha.request_body.json
                  type: string
              type: object
        description: '@tenants/POST_204_documentation_post_captcha.request_body.json'
      responses:
        '204':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/POST_204_documentation_post_captcha.json'
                    type: string
                type: object
          description: POST_204_documentation_post_captcha.json
      summary: 'Post Captcha    # TODO'
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/code/{code}:
    description: ''
    get:
      deprecated: false
      description: Get tenant from code
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/GET_200_documentation_get_tenant_from_code.json'
                    type: string
                type: object
          description: GET_200_documentation_get_tenant_from_code.json
      summary: Get tenant from code
      tags:
      - tenants
    parameters:
    - description: Code
      in: path
      name: code
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/tenants/find_user_by_uuid_and_tenant_code/{unique_id_and_tenant_code}:
    description: ''
    get:
      deprecated: false
      description: Get user by uuid and code
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/GET_200_documentation_get.json'
                    type: string
                type: object
          description: GET_200_documentation_get.json
      summary: Get user by uuid and code
      tags:
      - tenants
    parameters:
    - in: path
      name: unique_id_and_tenant_code
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/tenants/lookups:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: format
        required: false
        schema:
          default: default
          type: string
      - in: query
        name: lang
        required: false
        schema:
          default: default
          type: string
      - in: query
        name: format_frontend_key
        required: false
        schema:
          default: code
          type: string
      - in: query
        name: frontend_format
        required: false
        schema:
          default: list
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tenants
    parameters: []
    summary: summary
  /api/v3/tenants/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - in: query
        name: index_by
        required: false
        schema:
          default: id
          type: string
      - in: query
        name: group
        required: false
        schema:
          default: null
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tenants
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/tenants/me:
    description: ''
    get:
      deprecated: false
      description: Get user info
      parameters:
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - username
            - first_name
            - last_name
            - cache11.display_name
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/GET_200_documentation_get_me.json'
                    type: string
                type: object
          description: GET_200_documentation_get_me.json
      summary: Get user info
      tags:
      - tenants
    parameters: []
    patch:
      deprecated: false
      description: Patch user info
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch.request_body.json
                  type: string
              type: object
        description: '@TODO/PATCH_200_documentation_patch.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/PATCH_200_documentation_patch.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch.json
      summary: Patch user info
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/mk-cache/{table}:
    description: ''
    parameters:
    - description: Table
      in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch table TODO
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch.request_body.json
                  type: string
              type: object
        description: '@TODO/PATCH_200_documentation_patch.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/PATCH_200_documentation_patch.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch.json
      summary: Patch table TODO
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/my-settings:
    description: ''
    get:
      deprecated: false
      description: Get user settings TODO
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/GET_200_documentation_get.json'
                    type: string
                type: object
          description: GET_200_documentation_get.json
      summary: Get user settings TODO
      tags:
      - tenants
    parameters: []
    summary: summary
  /api/v3/tenants/my-settings/{key}:
    description: ''
    get:
      deprecated: false
      description: Get user settings from key TODO
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/GET_200_documentation_get.json'
                    type: string
                type: object
          description: GET_200_documentation_get.json
      summary: Get user settings from key  TODO
      tags:
      - tenants
    parameters:
    - in: path
      name: key
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post .
      parameters:
      - description: Value
        in: body
        name: value
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post.request_body.json
                  type: string
              type: object
        description: '@TODO/POST_201_documentation_post.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/POST_201_documentation_post.json'
                    type: string
                type: object
          description: POST_201_documentation_post.json
      summary: Post .
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/test:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: fields
        required: false
        schema:
          default: id,code,name
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tenants
    parameters: []
    summary: summary
  /api/v3/tenants/user_id_by_tenant_code_and_username:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: code
        required: true
        schema:
          type: string
      - in: query
        name: username
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tenants
    parameters: []
    summary: summary
  /api/v3/tenants/users:
    description: ''
    get:
      deprecated: false
      description: 'Get all users # TODO'
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: string
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 50
          type: string
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - username
            - first_name
            - last_name
            - cache11.display_name
            type: string
          type: array
      - description: Order
        in: query
        name: order_by
        required: false
        schema:
          default: username
          enum:
          - uid
          - username
          - first_name
          - last_name
          - display_name
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: false
          type: string
      - description: Limits response item number
        in: query
        name: force_limit
        required: false
        schema:
          default: null
          type: string
      - description: ''
        in: query
        name: group_by_user_group_code
        required: false
        schema:
          default: null
          type: string
      - description: ''
        in: query
        name: distinct_user_grouping
        required: false
        schema:
          default: true
          type: string
      - description: ''
        in: query
        name: departments
        required: false
        schema:
          default: null
          type: string
      - description: ''
        in: query
        name: ids_csv
        required: false
        schema:
          default: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/GET_200_documentation_get_all_users.json'
                    type: string
                type: object
          description: GET_200_documentation_get_all_users.json
      summary: 'Get all users # TODO'
      tags:
      - tenants
    parameters: []
    post:
      deprecated: false
      description: 'Post a user # TODO'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_user.request_body.json
                  type: string
              type: object
        description: '@tenants/POST_201_documentation_post_user.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/POST_201_documentation_post_user.json'
                    type: string
                type: object
          description: POST_201_documentation_post_user.json
      summary: 'Post a user     # TODO'
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/users/{id_user}:
    description: ''
    get:
      deprecated: false
      description: Get specific user
      parameters:
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and in this case
          will be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - username
            - first_name
            - last_name
            - cache11.display_name
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/GET_200_documentation_get_user.json'
                    type: string
                type: object
          description: GET_200_documentation_get_user.json
      summary: Get specific user
      tags:
      - tenants
    parameters:
    - description: User ID
      in: path
      name: id_user
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch_user.request_body.json
                  type: string
              type: object
        description: '@tenants/PATCH_200_documentation_patch_user.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/PATCH_200_documentation_patch_user.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch_user.json
      summary: Patch user
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/{id_tenant}/sessions:
    description: ''
    get:
      deprecated: false
      description: 'Get tenants session # TODO'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/GET_200_documentation_get_session_from_tenacnt.json'
                    type: string
                type: object
          description: GET_200_documentation_get_session_from_tenacnt.json
      summary: 'Get tenants session     # TODO'
      tags:
      - tenants
    parameters:
    - description: Tenant ID
      in: path
      name: id_tenant
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post tenants session
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Boolean value, if True, response will include User ID
        in: body
        name: show_user_id
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_session_from_tenant.request_body.json
                  type: string
              type: object
        description: '@tenants/POST_200_documentation_post_session_from_tenant.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/POST_200_documentation_post_session_from_tenant.json'
                    type: string
                type: object
          description: POST_200_documentation_post_session_from_tenant.json
      summary: Post tenants session
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/{id_tenant}/users:
    description: ''
    parameters:
    - description: Tenant ID
      in: path
      name: id_tenant
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_user_from_tenant.request_body.json
                  type: string
              type: object
        description: '@tenants/POST_201_documentation_post_user_from_tenant.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/POST_201_documentation_post_user_from_tenant.json'
                    type: string
                type: object
          description: POST_201_documentation_post_user_from_tenant.json
      summary: Post user
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/{id_tenant}/users/forgot-password:
    description: ''
    parameters:
    - description: Tenant ID
      in: path
      name: id_tenant
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: 'Post user forgot password # TODO'
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Seconds til expiration TODO ?
        in: body
        name: expire_in
        required: false
        schema:
          default: 300
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post.request_body.json
                  type: string
              type: object
        description: '@TODO/POST_201_documentation_post.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/POST_201_documentation_post.json'
                    type: string
                type: object
          description: POST_201_documentation_post.json
      summary: 'Post user forgot password   # TODO'
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/{id_tenant}/users/register:
    description: ''
    get:
      deprecated: false
      description: Get registered tenant
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/GET_200_documentation_get_user_register_from_tenant.json'
                    type: string
                type: object
          description: GET_200_documentation_get_user_register_from_tenant.json
      summary: Get registered tenant
      tags:
      - tenants
    parameters:
    - description: Tenant ID
      in: path
      name: id_tenant
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: 'Post registered user # TODO'
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: First name
        in: body
        name: first_name
        required: false
        schema:
          default: null
          type: string
      - description: Last name
        in: body
        name: last_name
        required: false
        schema:
          default: null
          type: string
      - description: Email
        in: body
        name: email
        required: false
        schema:
          default: null
          type: string
      - description: Mobile phone
        in: body
        name: mobile_phone
        required: false
        schema:
          default: null
          type: string
      - description: TODO ?
        in: body
        name: ttl
        required: false
        schema:
          default: 300
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post.request_body.json
                  type: string
              type: object
        description: '@TODO/POST_201_documentation_post.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/POST_201_documentation_post.json'
                    type: string
                type: object
          description: POST_201_documentation_post.json
      summary: 'Post registered user    # TODO'
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/{id_tenant}/users/register/{id_registrant}/activate:
    description: ''
    parameters:
    - description: Tenant ID
      in: path
      name: id_tenant
      required: true
      schema:
        type: string
      type: string
    - description: Registrant ID
      in: path
      name: id_registrant
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch activate user TODO
      parameters:
      - description: PIN
        in: body
        name: pin
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch.request_body.json
                  type: string
              type: object
        description: '@TODO/PATCH_200_documentation_patch.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/PATCH_200_documentation_patch.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch.json
      summary: Patch activate user TODO
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/{id_tenant}/users/reset-password/{reset_password_uuid}:
    description: ''
    parameters:
    - description: Tenant ID
      in: path
      name: id_tenant
      required: true
      schema:
        type: string
      type: string
    - description: Password reset ID
      in: body
      name: reset_password_uuid
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post user reset password
      parameters:
      - description: New password
        in: body
        name: password
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post.request_body.json
                  type: string
              type: object
        description: '@TODO/POST_201_documentation_post.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/POST_201_documentation_post.json'
                    type: string
                type: object
          description: POST_201_documentation_post.json
      summary: Post user reset password
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/{id_tenant}/users/signup:
    description: ''
    parameters:
    - description: Tenant ID
      in: path
      name: id_tenant
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: 'Post tenants signup # TODO explain, add RequestBody for other
        value types'
      parameters:
      - description: Value used for signup (username, email, phone number)
        in: body
        name: value
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_200_documentation_post_signup_from_tenant.request_body.json
                  type: string
              type: object
        description: '@tenants/POST_200_documentation_post_signup_from_tenant.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tenants/POST_200_documentation_post_signup_from_tenant.json'
                    type: string
                type: object
          description: POST_200_documentation_post_signup_from_tenant.json
      summary: 'Post tenants signup     # TODO explain, add RequestBody for other
        value types'
      tags:
      - tenants
    summary: summary
  /api/v3/tenants/{id_tenant}/users/signup/step2/{id_user_or_pin_or_id_registrant}:
    description: ''
    parameters:
    - description: Tenant ID
      in: path
      name: id_tenant
      required: true
      schema:
        type: string
      type: string
    - description: TODO
      in: path
      name: id_user_or_pin_or_id_registrant
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: 'Post 2nd step for signup # TODO'
      parameters:
      - description: ''
        in: body
        name: value
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post.request_body.json
                  type: string
              type: object
        description: '@TODO/POST_201_documentation_post.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/POST_201_documentation_post.json'
                    type: string
                type: object
          description: POST_201_documentation_post.json
      summary: 'Post 2nd step for signup    # TODO'
      tags:
      - tenants
    summary: summary
  /api/v3/tickets/:
    delete:
      deprecated: false
      description: Delete tickets/items
      parameters:
      - description: Tickets to be deleted
        in: query
        name: items
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/DELETE_200_documentation_delete_ticket.json'
                    type: string
                type: object
          description: DELETE_200_documentation_delete_ticket.json
      summary: Delete tickets/items
      tags:
      - tickets
    description: ''
    get:
      deprecated: false
      description: Get all tickets/items TODO parameters
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int64
          type: integer
      - description: General search
        in: query
        name: search
        required: false
        schema:
          default: null
          type: string
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - uid
            - ticket_priority_id
            - visible_to_customer
            - id_user_group
            - source_number
            - company_display_name
            - site_address
            - title
            - ticket_type_id
            - assignees_user_ids
            - assignees_user_display_names
            - assignees_user_profile_pictures
            - tags
            - ticket_status_id
            - flow_messages
            - todo
            - planned_end_date
            - deadline
            - days_to_planned_end_date
            - contact_user_display_names
            - created
            - created_by
            - last_updated
            - last_updated_by
            type: string
          type: array
      - description: Result order
        in: query
        name: order_by
        required: false
        schema:
          default: -created
          enum:
          - created
          - last_updated
          - title
          - created_by
          - last_updated_by
          - ticket_type
          - ticket_priority
          - ticket_status
          - responsible_user_display_name
          - number_of_assignees
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: false
          type: boolean
      - description: TODO
        in: query
        name: include_columns_in_response
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/GET_200_documentation_get_all_tickets.json'
                    type: string
                type: object
          description: GET_200_documentation_get_all_tickets.json
      summary: Get all tickets/items TODO parameters
      tags:
      - tickets
    parameters: []
    patch:
      deprecated: false
      description: Patch multiple tickets/items.
      parameters:
      - description: Items to patch
        in: query
        name: items
        required: true
        schema:
          items:
            type: string
          type: array
      - description: Show details
        in: query
        name: show_details
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch_multiple_tickets.request_body.json
                  type: string
              type: object
        description: '@tickets/PATCH_200_documentation_patch_multiple_tickets.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/PATCH_200_documentation_patch_multiple_tickets.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch_multiple_tickets.json
      summary: Patch multiple tickets/items.
      tags:
      - tickets
    post:
      deprecated: false
      description: Post a tickets/items TODO request.body
      parameters:
      - description: Ticket type
        in: body
        name: ticket_type_id
        required: false
        schema:
          default: null
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_ticket.request_body.json
                  type: string
              type: object
        description: '@tickets/POST_201_documentation_post_ticket.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/POST_201_documentation_post_ticket.json'
                    type: string
                type: object
          description: POST_201_documentation_post_ticket.json
      summary: Post a tickets/items TODO request.body
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - tickets
    parameters: []
    summary: summary
  /api/v3/tickets/boards/{id_board}:
    description: ''
    get:
      deprecated: false
      description: Get a board
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/GET_200_documentation_get_users_default_settings_for_specific_table.json'
                    type: string
                type: object
          description: GET_200_documentation_get_users_default_settings_for_specific_table.json
      summary: Get a board
      tags:
      - tickets
    parameters:
    - description: Board ID
      in: path
      name: id_board
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/tickets/buckets/{id_bucket}/order:
    description: ''
    get:
      deprecated: false
      description: TODO
      parameters:
      - in: query
        name: fields
        required: false
        schema:
          default: null
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: TODO
      tags:
      - tickets
    parameters:
    - in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: TODO
      parameters:
      - in: body
        name: new_order
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        '418':
          description: Responses were not documented.
      summary: TODO
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/default-fields/{table}:
    description: ''
    get:
      deprecated: false
      description: Get users default settings for specific table
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/GET_200_documentation_get_users_default_settings_for_specific_table.json'
                    type: string
                type: object
          description: GET_200_documentation_get_users_default_settings_for_specific_table.json
      summary: Get users default settings for specific table
      tags:
      - tickets
    parameters:
    - description: Table name for user settings. tickets table is most often used
      in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/tickets/devel:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: code
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    parameters: []
    summary: summary
  /api/v3/tickets/git-users:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: user_username
        required: true
        schema:
          type: string
      - in: body
        name: git_server
        required: true
        schema:
          type: string
      - in: body
        name: id_user
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/git/{tenant_code}:
    description: ''
    parameters:
    - in: path
      name: tenant_code
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/import_ombis:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: updated_after
        required: true
        schema:
          format: date-time
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/import_v2:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    parameters: []
    summary: summary
  /api/v3/tickets/jsontest:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: data
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/kanban-mk-cache-for-tickets-in-bucket/{id_bucket}:
    description: ''
    parameters:
    - in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/lookups:
    description: ''
    get:
      deprecated: false
      description: Get lookups
      parameters:
      - description: Format
        in: path
        name: format
        required: false
        schema:
          default: default
          type: string
      - description: Language
        in: query
        name: lang
        required: false
        schema:
          default: default
          type: string
      - description: Format frontend key
        in: query
        name: format_frontend_key
        required: false
        schema:
          default: code
          type: string
      - description: Frontend format
        in: query
        name: frontend_format
        required: false
        schema:
          default: list
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/GET_200_documentation_get_ticket_assignees.json'
                    type: string
                type: object
          description: GET_200_documentation_get_ticket_assignees.json
      summary: Get lookups
      tags:
      - tickets
    parameters: []
    summary: summary
  /api/v3/tickets/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - in: query
        name: index_by
        required: false
        schema:
          default: id
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/tickets/mk-cache/{table}:
    description: ''
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - in: body
        name: log_progress
        required: false
        schema:
          default: true
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/service-cache:
    description: ''
    parameters: []
    patch:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: id_tenant
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: sender_service
        required: true
        schema:
          type: string
      - in: body
        name: model
        required: true
        schema:
          type: string
      - in: body
        name: id_item
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: updated_fields
        required: true
        schema:
          items:
            type: string
          type: array
      - in: body
        name: serialized_object
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/working:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    parameters: []
    summary: summary
  /api/v3/tickets/working/close-current-working-for-everyone:
    description: ''
    parameters: []
    patch:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: id_ticket
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/{id_ticket}:
    description: ''
    get:
      deprecated: false
      description: Get ticket/item
      parameters:
      - description: Fields to be shown
        in: query
        name: fields
        required: false
        schema:
          default: null
          enum:
          - id
          - uid
          - ticket_priority_id
          - visible_to_customer
          - id_user_group
          - source_number
          - company_display_name
          - site_address
          - title
          - ticket_type_id
          - assignees_user_ids
          - assignees_user_display_names
          - assignees_user_profile_pictures
          - tags
          - ticket_status_id
          - flow_messages
          - todo
          - planned_end_date
          - deadline
          - days_to_planned_end_date
          - contact_user_display_names
          - created
          - created_by
          - last_updated
          - last_updated_by
          type: string
      - description: Language
        in: query
        name: language
        required: false
        schema:
          default: default
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/GET_200_documentation_get_ticket.json'
                    type: string
                type: object
          description: GET_200_documentation_get_ticket.json
      summary: Get ticket/item
      tags:
      - tickets
    parameters:
    - description: ID of item to patch
      in: path
      name: id_ticket
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch ticket/item.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch_ticket.request_body.json
                  type: string
              type: object
        description: '@tickets/PATCH_200_documentation_patch_ticket.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/PATCH_200_documentation_patch_ticket.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch_ticket.json
      summary: Patch ticket/item.
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/{id_ticket}/assignees:
    description: ''
    get:
      deprecated: false
      description: Get ticket assignees
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/GET_200_documentation_get_ticket_assignees.json'
                    type: string
                type: object
          description: GET_200_documentation_get_ticket_assignees.json
      summary: Get ticket assignees
      tags:
      - tickets
    parameters:
    - description: ID of a ticket
      in: path
      name: id_ticket
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Patch ticket/item.
      parameters:
      - description: User to add to ticket
        in: body
        name: id_user
        required: true
        schema:
          format: uuid
          type: string
      - description: Boolean value
        in: body
        name: responsible
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_204_documentation_post_ticket_assignees.request_body.json
                  type: string
              type: object
        description: '@tickets/POST_204_documentation_post_ticket_assignees.request_body.json'
      responses:
        '204':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/tickets/POST_204_documentation_post_ticket_assignees.json'
                    type: string
                type: object
          description: POST_204_documentation_post_ticket_assignees.json
      summary: Patch ticket/item.
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/{id_ticket}/buckets/{id_bucket}:
    delete:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    description: ''
    parameters:
    - description: Ticket ID
      in: path
      name: id_ticket
      required: true
      schema:
        type: string
      type: string
    - description: Path ID
      in: path
      name: id_bucket
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch ?? TODO tests
      parameters:
      - description: New position
        in: body
        name: position
        required: false
        schema:
          default: null
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch.request_body.json
                  type: string
              type: object
        description: '@TODO/PATCH_200_documentation_patch.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/TODO/PATCH_200_documentation_patch.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch.json
      summary: Patch ?? TODO tests
      tags:
      - tickets
    summary: summary
  /api/v3/tickets/{id_ticket}/working:
    delete:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    description: ''
    parameters:
    - in: path
      name: id_ticket
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - tickets
    summary: summary
  /api/v3/todos/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - todos
    parameters: []
    summary: summary
  /api/v3/todos/{id_todo}:
    delete:
      deprecated: false
      description: Delete Todo
      parameters: []
      responses:
        '204':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/DELETE_204_documentation_delete_todo.json'
                    type: string
                type: object
          description: DELETE_204_documentation_delete_todo.json
      summary: Delete Todo
      tags:
      - todos
    description: ''
    get:
      deprecated: false
      description: Get Todos information
      parameters:
      - description: Result order
        in: query
        name: order
        required: false
        schema:
          default: order
          enum:
          - order
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - instance
            - id_instance
            - title
            - resolved
            - resolved_by
            - created_by_display_name
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/GET_200_documentation_get_todo.json'
                    type: string
                type: object
          description: GET_200_documentation_get_todo.json
      summary: Get Todos information
      tags:
      - todos
    parameters:
    - description: ID of a todo
      in: path
      name: id_todo
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch Todo
      parameters:
      - description: New title
        in: body
        name: title
        required: false
        schema:
          default: null
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch_todo.request_body.json
                  type: string
              type: object
        description: '@todos/PATCH_200_documentation_patch_todo.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/PATCH_200_documentation_patch_todo.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch_todo.json
      summary: Patch Todo
      tags:
      - todos
    summary: summary
  /api/v3/todos/{instance}/{id_instance}:
    description: ''
    get:
      deprecated: false
      description: Get objects Todos
      parameters:
      - description: Result order
        in: query
        name: order
        required: false
        schema:
          default: order
          enum:
          - order
          type: string
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - instance
            - id_instance
            - title
            - resolved
            - resolved_by
            - created_by_display_name
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/GET_200_documentation_get_todo.json'
                    type: string
                type: object
          description: GET_200_documentation_get_todo.json
      summary: Get objects Todos
      tags:
      - todos
    parameters:
    - description: Type of object where todo is connected (ticket, wiki, ...)
      in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    - description: ID of object
      in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: Post Todo to an object
      parameters:
      - description: Title of Todo
        in: body
        name: title
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_instance.request_body.json
                  type: string
              type: object
        description: '@todos/POST_201_documentation_post_instance.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/POST_201_documentation_post_instance.json'
                    type: string
                type: object
          description: POST_201_documentation_post_instance.json
      summary: Post Todo to an object
      tags:
      - todos
    summary: summary
  /api/v3/todos/{instance}/{id_instance}/order:
    description: ''
    get:
      deprecated: false
      description: Get order of instances
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/GET_200_documentation_get.json'
                    type: string
                type: object
          description: GET_200_documentation_get.json
      summary: Get order of instances
      tags:
      - todos
    parameters:
    - description: Type of object where todo is connected (ticket, wiki, ...)
      in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    - description: ID of object
      in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Patch instance order TODO tests
      parameters:
      - description: New instance order
        in: body
        name: new_order
        required: true
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch.request_body.json
                  type: string
              type: object
        description: '@todos/PATCH_200_documentation_patch.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/PATCH_200_documentation_patch.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch.json
      summary: Patch instance order   TODO tests
      tags:
      - todos
    summary: summary
  /api/v3/todos/{instance}/{id_instance}/{id_todo}/resolve:
    description: ''
    get:
      deprecated: false
      description: Get Todos resolved status
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/GET_200_documentation_get_instance_todo_resolve.json'
                    type: string
                type: object
          description: GET_200_documentation_get_instance_todo_resolve.json
      summary: Get Todos resolved status
      tags:
      - todos
    parameters:
    - description: Type of object where todo is connected (ticket, wiki, ...)
      in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    - description: ID of object
      in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    - description: Id of Todo
      in: path
      name: id_todo
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Change Todos resolved status
      parameters:
      - description: Todos resolved status
        in: body
        name: resolve
        required: false
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch_instance_todo_resolve.request_body.json
                  type: string
              type: object
        description: '@todos/PATCH_200_documentation_patch_instance_todo_resolve.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/todos/PATCH_200_documentation_patch_instance_todo_resolve.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch_instance_todo_resolve.json
      summary: Change Todos resolved status
      tags:
      - todos
    summary: summary
  /api/v3/wallet/about:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    parameters: []
    summary: summary
  /api/v3/wallet/balance:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: fields
        required: false
        schema:
          default: null
          type: string
      - in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - in: query
        name: all
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    parameters: []
    summary: summary
  /api/v3/wallet/currencies:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: code
        required: true
        schema:
          type: string
      - in: body
        name: name
        required: true
        schema:
          type: string
      - in: body
        name: base
        required: true
        schema:
          type: boolean
      - in: body
        name: current_exchange_rate
        required: true
        schema:
          format: float64
          type: number
      - in: body
        name: current_exchange_rate_buy
        required: true
        schema:
          format: float64
          type: number
      - in: body
        name: current_exchange_rate_sell
        required: true
        schema:
          format: float64
          type: number
      - in: body
        name: current_exchange_rate_date
        required: true
        schema:
          format: date-time
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    summary: summary
  /api/v3/wallet/exchange:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: id_source_wallet
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: id_destination_wallet
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: id_operation
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: amount
        required: true
        schema:
          format: float64
          type: number
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    summary: summary
  /api/v3/wallet/exchange/{id_operation}/finalize:
    description: ''
    parameters:
    - in: path
      name: id_operation
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    summary: summary
  /api/v3/wallet/init-account:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: id_user
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: id_currency
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: value
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    summary: summary
  /api/v3/wallet/integration-test-balances:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    parameters: []
    summary: summary
  /api/v3/wallet/integration-test-transactions:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: null
          format: int64
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: null
          format: int64
          type: integer
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    parameters: []
    summary: summary
  /api/v3/wallet/lookups:
    description: ''
    get:
      deprecated: false
      description: ''
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    parameters: []
    summary: summary
  /api/v3/wallet/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    summary: summary
  /api/v3/wallet/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - in: query
        name: index_by
        required: false
        schema:
          default: id
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/wallet/my-wallets:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: format
        required: false
        schema:
          default: list
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    parameters: []
    summary: summary
  /api/v3/wallet/{id_wallet}/transactions:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    parameters:
    - in: path
      name: id_wallet
      required: true
      schema:
        type: string
      type: string
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: id_wallet_receiver
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: id_transaction_type
        required: true
        schema:
          format: uuid
          type: string
      - in: body
        name: value
        required: true
        schema:
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wallet
    summary: summary
  /api/v3/wiki/:
    description: ''
    get:
      deprecated: false
      description: Get all wiki posts created by user.
      parameters:
      - description: Current page
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 50
          format: int64
          type: integer
      - description: Filter for allowed columns
        in: query
        name: filters
        required: false
        schema:
          default: null
          properties:
            example_was_not_specified:
              type: string
          type: object
      - description: CSV string of fields (by default it is null, and this case will
          be used from personal user setting)
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - title
            - body
            - tags
            - status
            - news
            - created_by
            - last_updated_by
            - id_group
            type: string
          type: array
      - description: Result order
        in: query
        name: order_by
        required: false
        schema:
          default: title
          enum:
          - news
          - title
          - created
          - last_updated
          type: string
      - description: If true, pagination will not be provided. By default, it is True
        in: query
        name: no_paginate
        required: false
        schema:
          default: false
          type: string
      - description: '# TODO'
        in: query
        name: only_summary
        required: false
        schema:
          default: false
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/GET_200_documentation_get_all_wiki.json'
                    type: string
                type: object
          description: GET_200_documentation_get_all_wiki.json
      summary: Get all wiki posts created by user.
      tags:
      - wiki
    parameters: []
    post:
      deprecated: false
      description: Create a wiki post.
      parameters:
      - description: Title of the wiki
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Body of the wiki
        in: body
        name: body
        required: false
        schema:
          default: null
          type: string
      - description: Tags of the wiki
        in: body
        name: tags
        required: false
        schema:
          default: null
          items:
            type: string
          type: array
      - description: Status of the wiki
        in: body
        name: status
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - description: News
        in: body
        name: news
        required: false
        schema:
          default: null
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_wiki_article.request_body.json
                  type: string
              type: object
        description: '@wiki/POST_201_documentation_post_wiki_article.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/POST_201_documentation_post_wiki_article.json'
                    type: string
                type: object
          description: POST_201_documentation_post_wiki_article.json
      summary: Create a wiki post.
      tags:
      - wiki
    summary: summary
  /api/v3/wiki/about:
    description: ''
    get:
      deprecated: false
      description: Get about information
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/GET_200_documentation_get_about.json'
                    type: string
                type: object
          description: GET_200_documentation_get_about.json
      summary: Get about information
      tags:
      - wiki
    parameters: []
    summary: summary
  /api/v3/wiki/lookups:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: format
        required: false
        schema:
          default: default
          type: string
      - in: query
        name: lang
        required: false
        schema:
          default: default
          type: string
      - in: query
        name: format_frontend_key
        required: false
        schema:
          default: code
          type: string
      - in: query
        name: frontend_format
        required: false
        schema:
          default: list
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wiki
    parameters: []
    summary: summary
  /api/v3/wiki/lookups/init:
    description: ''
    parameters: []
    post:
      deprecated: false
      description: ''
      parameters:
      - in: body
        name: lookups
        required: true
        schema:
          properties:
            example_was_not_specified:
              type: string
          type: object
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wiki
    summary: summary
  /api/v3/wiki/lookups/{table}:
    description: ''
    get:
      deprecated: false
      description: ''
      parameters:
      - in: query
        name: last_updated
        required: false
        schema:
          default: null
          format: date-time
          type: string
      - in: query
        name: index_by
        required: false
        schema:
          default: id
          type: string
      responses:
        '418':
          description: Responses were not documented.
      summary: ''
      tags:
      - wiki
    parameters:
    - in: path
      name: table
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/wiki/tags:
    description: ''
    get:
      deprecated: false
      description: Get all tags from all wiki articles.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/GET_200_documentation_get_all_wiki_tags.json'
                    type: string
                type: object
          description: GET_200_documentation_get_all_wiki_tags.json
      summary: Get all tags from all wiki articles.
      tags:
      - wiki
    parameters: []
    summary: summary
  /api/v3/wiki/tags/{tag_name}:
    delete:
      deprecated: false
      description: Delete a tag
      parameters: []
      responses:
        '204':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/DELETE_204_documentation_delete_tag.json'
                    type: string
                type: object
          description: DELETE_204_documentation_delete_tag.json
      summary: Delete a tag
      tags:
      - wiki
    description: ''
    get:
      deprecated: false
      description: Get one tag from tag name
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/GET_200_documentation_get_one_tag.json'
                    type: string
                type: object
          description: GET_200_documentation_get_one_tag.json
      summary: Get one tag from tag name
      tags:
      - wiki
    parameters:
    - description: Tag name, used for filtering
      in: path
      name: tag_name
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/wiki/{id_wiki}/permissions:
    description: ''
    get:
      deprecated: false
      description: Get wiki permissions from article
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/GET_200_documentation_get_wiki_permissions.json'
                    type: string
                type: object
          description: GET_200_documentation_get_wiki_permissions.json
      summary: Get wiki permissions from article
      tags:
      - wiki
    parameters:
    - description: ID of a wiki
      in: path
      name: id_wiki
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /api/v3/wiki/{id_wiki}/permissions/groups/{id_group}:
    description: ''
    parameters:
    - description: ID of a wiki
      in: path
      name: id_wiki
      required: true
      schema:
        type: string
      type: string
    - description: ID of a group
      in: path
      name: id_group
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Edit wiki permissions
      parameters:
      - description: Write permission
        in: body
        name: write_perm
        required: false
        schema:
          default: null
          type: boolean
      - description: Delete permission
        in: body
        name: delete_perm
        required: false
        schema:
          default: null
          type: boolean
      - in: body
        name: read_perm
        required: false
        schema:
          default: null
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch_wiki_permissions.request_body.json
                  type: string
              type: object
        description: '@wiki/PATCH_200_documentation_patch_wiki_permissions.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/PATCH_200_documentation_patch_wiki_permissions.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch_wiki_permissions.json
      summary: Edit wiki permissions
      tags:
      - wiki
    post:
      deprecated: false
      description: Add wiki permissions
      parameters:
      - description: Write permission
        in: body
        name: write_perm
        required: false
        schema:
          default: null
          type: boolean
      - description: Delete permission
        in: body
        name: delete_perm
        required: false
        schema:
          default: null
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound POST_201_documentation_post_wiki_permissions.request_body.json
                  type: string
              type: object
        description: '@wiki/POST_201_documentation_post_wiki_permissions.request_body.json'
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/POST_201_documentation_post_wiki_permissions.json'
                    type: string
                type: object
          description: POST_201_documentation_post_wiki_permissions.json
      summary: Add wiki permissions
      tags:
      - wiki
    summary: summary
  /api/v3/wiki/{id}:
    delete:
      deprecated: false
      description: Delete single wiki article
      parameters: []
      responses:
        '204':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/DELETE_204_documentation_delete_single_project.json'
                    type: string
                type: object
          description: DELETE_204_documentation_delete_single_project.json
      summary: Delete single wiki article
      tags:
      - wiki
    description: ''
    get:
      deprecated: false
      description: Get single wiki post created by user
      parameters:
      - description: CSV fields. If nothing provided all fields will be returned
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            default: null
            enum:
            - id
            - title
            - body
            - tags
            - status
            - news
            - created_by
            - last_updated_by
            - id_group
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/GET_200_documentation_get_single_wiki.json'
                    type: string
                type: object
          description: GET_200_documentation_get_single_wiki.json
      summary: Get single wiki post created by user
      tags:
      - wiki
    parameters:
    - description: ID of a wiki
      in: path
      name: id
      required: true
      schema:
        type: string
      type: string
    patch:
      deprecated: false
      description: Edit a wiki post
      parameters:
      - description: Title of the wiki
        in: body
        name: title
        required: false
        schema:
          default: null
          type: string
      - description: Body of the wiki
        in: body
        name: body
        required: false
        schema:
          default: null
          type: string
      - description: Tags of the wiki
        in: body
        name: tags
        required: false
        schema:
          default: null
          items:
            type: string
          type: array
      - description: Status of the wiki
        in: body
        name: status
        required: false
        schema:
          default: null
          format: uuid
          type: string
      - description: News
        in: body
        name: news
        required: false
        schema:
          default: null
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  example: FileNotFound PATCH_200_documentation_patch_wiki_article.request_body.json
                  type: string
              type: object
        description: '@wiki/PATCH_200_documentation_patch_wiki_article.request_body.json'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/PATCH_200_documentation_patch_wiki_article.json'
                    type: string
                type: object
          description: PATCH_200_documentation_patch_wiki_article.json
      summary: Edit a wiki post
      tags:
      - wiki
    summary: summary
  /api/v3/wiki/{wiki_id}/tags:
    description: ''
    get:
      deprecated: false
      description: Get all tags from a single wiki article.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: 'File not found: /home/stefan/work/labs/src/generated_api_documentation/wiki/GET_200_documentation_get_wiki_tags.json'
                    type: string
                type: object
          description: GET_200_documentation_get_wiki_tags.json
      summary: Get all tags from a single wiki article.
      tags:
      - wiki
    parameters:
    - description: ID of a wiki
      in: path
      name: wiki_id
      required: true
      schema:
        type: string
      type: string
    summary: summary
  /redirect/{instance}/{id_instance}:
    description: ''
    get:
      deprecated: false
      description: TODO
      parameters: []
      responses:
        '418':
          description: Responses were not documented.
      summary: TODO
      tags:
      - redirect
    parameters:
    - in: path
      name: instance
      required: true
      schema:
        type: string
      type: string
    - in: path
      name: id_instance
      required: true
      schema:
        type: string
      type: string
    summary: summary
security:
- token: []
servers:
- description: Test Server
  url: https://labs.digitalcube.dev
- description: Mirror server
  url: https://telmekom.mirror.digitalcube.dev
- description: Local server
  url: http://localhost:8081
